-- phpMyAdmin SQL Dump
-- version 4.4.15.10
-- https://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: 2018-06-29 19:16:30
-- 服务器版本： 5.5.58-log
-- PHP Version: 5.4.45

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `mycms`
--

-- --------------------------------------------------------

--
-- 表的结构 `lv_admin`
--

CREATE TABLE IF NOT EXISTS `lv_admin` (
  `id` int(11) NOT NULL,
  `account` varchar(50) DEFAULT '',
  `password` text,
  `status` varchar(10) DEFAULT '0' COMMENT '当前账号状态0正常，1锁死，2拉黑',
  `error_count` varchar(50) DEFAULT '0' COMMENT '输入错误密码的次数',
  `more` text,
  `super` int(11) DEFAULT '0' COMMENT '是否超级管理员 0否1是',
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `role_id` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT='管理员表';

--
-- 转存表中的数据 `lv_admin`
--

INSERT INTO `lv_admin` (`id`, `account`, `password`, `status`, `error_count`, `more`, `super`, `create_time`, `update_time`, `role_id`) VALUES
(1, '849688611', 'db18311307ac51be0ad343101e9947e2', '0', '0', NULL, 1, 1523167940, 1530263651, 1),
(2, 'nicexixi', 'debfc6c7fd10b9b2e1d1c2924c6beb10', '0', '0', NULL, 0, 1523169038, 1527414658, 1),
(3, 'wangluyu', '722c605a10a6076e16c6b8dec9190ec1', '0', '0', NULL, 0, 1523169117, 1527355530, 3),
(6, 'nicexixixi', '8fb2cf8395b11e474a8f70135f151c10', '0', '0', NULL, 0, 1527354948, 1527354948, 1);

-- --------------------------------------------------------

--
-- 表的结构 `lv_auth`
--

CREATE TABLE IF NOT EXISTS `lv_auth` (
  `id` int(11) NOT NULL,
  `name` text,
  `uris` text,
  `parent_id` int(11) DEFAULT '0' COMMENT '父级菜单ID',
  `more` text,
  `list_order` int(11) DEFAULT '0'
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8 COMMENT='权限表';

--
-- 转存表中的数据 `lv_auth`
--

INSERT INTO `lv_auth` (`id`, `name`, `uris`, `parent_id`, `more`, `list_order`) VALUES
(1, '权限管理', '/', 0, '{"icon":"el-icon-third-ticket"}', 20),
(2, '管理员', '/auth/admin', 1, '{"icon":""}', 0),
(3, '角色管理', '/auth/role', 1, '[]', 0),
(7, '权限资源管理', '/auth/auth', 1, '{"icon":""}', 0),
(8, '内容管理', '/', 0, '{"icon":"el-icon-tickets"}', 0),
(9, '栏目管理', '/portal/category', 8, '"{\\"icon\\":\\"\\"}"', 0),
(10, '文章管理', '/portal/post', 8, '{"icon":""}', 0),
(11, '评论管理', '/portal/comment', 8, '{"icon":""}', 0),
(12, '用户管理', '/', 0, '{"icon":"el-icon-third-group_light"}', 0),
(13, '单页管理', '/portal/single', 8, '{"icon":""}', 0),
(14, '模版管理', '/portal/template', 15, '{"icon":""}', 0),
(15, '门户工具', '/', 0, '{"icon":"el-icon-third-skin_light"}', 0),
(16, '导航管理', '/portal/nav', 15, '{"icon":""}', 0),
(17, '幻灯片管理', '/portal/slide', 15, '{"icon":""}', 0),
(18, '用户', '/user/user', 12, '{"icon":""}', 100),
(19, '用户组', '/user/userGroup', 12, '{"icon":""}', 10);

-- --------------------------------------------------------

--
-- 表的结构 `lv_category`
--

CREATE TABLE IF NOT EXISTS `lv_category` (
  `id` int(11) NOT NULL,
  `name` varchar(255) DEFAULT NULL COMMENT '栏目名称',
  `excerpt` text COMMENT '栏目描述',
  `content` text COMMENT '栏目富文本内容',
  `thumbnail` text,
  `more` text,
  `parent_id` int(11) DEFAULT NULL,
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `template_id` int(11) DEFAULT '0',
  `list_order` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8 COMMENT='栏目表';

--
-- 转存表中的数据 `lv_category`
--

INSERT INTO `lv_category` (`id`, `name`, `excerpt`, `content`, `thumbnail`, `more`, `parent_id`, `create_time`, `update_time`, `template_id`, `list_order`) VALUES
(13, '学习手记', '学习各种技术的手记，随手看到知识点的记录', '', NULL, '[]', 0, 1529943535, 1529943535, 0, 0),
(14, '随手拍拍', '', '', NULL, '[]', 0, 1529943600, 1529943600, 0, 0),
(15, 'JavaScript', '', '', NULL, '[]', 13, 1529943685, 1529943685, 0, 0),
(16, 'PHP', '', '', NULL, '[]', 13, 1529943719, 1529943809, 0, 0),
(17, '微信小程序', '', '', NULL, '[]', 13, 1529943754, 1529948314, 0, 1),
(18, 'Vue', '', '', NULL, '[]', 13, 1529943779, 1529943779, 0, 2),
(19, 'Golang', '', '', NULL, '[]', 13, 1529943835, 1529943850, 0, 1),
(20, 'NodeJS', '', '', NULL, '[]', 13, 1529943879, 1529943879, 0, 0),
(24, '杂七杂八', '', '', NULL, '[]', 0, 1530117672, 1530117672, 0, 0),
(25, 'CSS', '', '', NULL, '[]', 13, 1530167897, 1530167897, 0, 0);

-- --------------------------------------------------------

--
-- 表的结构 `lv_category_post`
--

CREATE TABLE IF NOT EXISTS `lv_category_post` (
  `id` int(11) NOT NULL,
  `category_id` int(11) DEFAULT NULL,
  `post_id` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=60 DEFAULT CHARSET=utf8 COMMENT='栏目内容关系表';

--
-- 转存表中的数据 `lv_category_post`
--

INSERT INTO `lv_category_post` (`id`, `category_id`, `post_id`) VALUES
(20, 15, 14),
(21, 15, 13),
(30, 15, 24),
(31, 15, 25),
(32, 16, 26),
(33, 15, 27),
(34, 16, 28),
(35, 24, 29),
(36, 16, 30),
(40, 15, 33),
(42, 25, 34),
(43, 15, 35),
(44, 16, 36),
(45, 24, 37),
(46, 16, 38),
(47, 18, 39),
(48, 15, 40),
(49, 16, 41),
(50, 16, 42),
(53, 15, 45),
(54, 16, 46),
(55, 17, 47),
(56, 15, 48),
(57, 20, 49),
(58, 25, 50);

-- --------------------------------------------------------

--
-- 表的结构 `lv_comment`
--

CREATE TABLE IF NOT EXISTS `lv_comment` (
  `id` int(11) NOT NULL,
  `content` text,
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `post_id` int(11) DEFAULT NULL,
  `status` tinyint(4) DEFAULT '1' COMMENT '1显示，0隐藏',
  `parent_id` int(11) DEFAULT '0' COMMENT '顶级评论id',
  `floor` int(11) DEFAULT '0',
  `reply_id` int(11) DEFAULT '0' COMMENT '回复给了哪条评论',
  `reply_user_id` int(11) DEFAULT '0' COMMENT '回复给的这条评论的作者'
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='评论表';

-- --------------------------------------------------------

--
-- 表的结构 `lv_config`
--

CREATE TABLE IF NOT EXISTS `lv_config` (
  `id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='配置表';

-- --------------------------------------------------------

--
-- 表的结构 `lv_file`
--

CREATE TABLE IF NOT EXISTS `lv_file` (
  `id` int(11) NOT NULL,
  `name` text,
  `md5` text,
  `sha1` text,
  `url` text,
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `ext` text
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 COMMENT='文件资源表';

--
-- 转存表中的数据 `lv_file`
--

INSERT INTO `lv_file` (`id`, `name`, `md5`, `sha1`, `url`, `create_time`, `update_time`, `ext`) VALUES
(4, '目标设置-思维导图.png', '53e5d454e39539319a18ada82154d4df', '5ac754cb78f898584d26c6d2a719b0db60e9a6b3', '/upload/53/e5d454e39539319a18ada82154d4df.png', 1526194658, 1526194658, 'png'),
(5, '校徽校名副本.png', 'ccfdc33aa4da602d66292e10e0f7547c', 'd32590c87f7d99f5ee4c59f1771ebf527af4bd79', '/upload/cc/fdc33aa4da602d66292e10e0f7547c.png', 1527482811, 1527482811, 'png'),
(6, 'img_01.jpg', 'fb3469da10a67362d6b1cf0d60f79cae', '2ab7b9edad4eb82794cf0d9163b61ffb5e683ad9', '/upload/fb/3469da10a67362d6b1cf0d60f79cae.jpg', 1527524715, 1527524715, 'jpg'),
(7, '校徽校名.png', 'b5c5a480d2234b6b2d0e378bb1dffe1c', 'f42c907834fc8b1338edaca9e290af4d8e4bdbc4', '/upload/b5/c5a480d2234b6b2d0e378bb1dffe1c.png', 1527525135, 1527525135, 'png'),
(8, '屏幕快照 2017-01-02 下午3.01.01.png', 'b66c8622abd10dc18a108d82a03099f9', '271e3d2b4d589b0a469c34480803466232efbc10', '/upload/b6/6c8622abd10dc18a108d82a03099f9.png', 1527525768, 1527525768, 'png'),
(9, '屏幕快照 2017-01-02 下午3.09.03.png', 'e4208f9c66f571531fd9e3ba47c0e827', '6ff56248bfec74626c8f90ee2bb1cc4830655995', '/upload/e4/208f9c66f571531fd9e3ba47c0e827.png', 1527561422, 1527561422, 'png'),
(10, '屏幕快照 2018-06-14 下午1.30.01.png', '91b753a167e1980c5841a85a622c51cb', 'c1ddfaa3d65d337ad2b24d7cf120174211a41ec1', '/upload/91/b753a167e1980c5841a85a622c51cb.png', 1528965959, 1528965959, 'png'),
(11, '目标设置-思维导图.png', '72910371e2933e02d1bad141702696ed', '7ce845922f785e9aa5850d76737c2b902a94f63b', '/upload/72/910371e2933e02d1bad141702696ed.png', 1529948341, 1529948341, 'png'),
(12, 'TIM截图20180625225912.png', 'b6467d055e2e44d0bb69cebb953b0953', 'd4e790ed19f2fb004e4d1556ca475cbbdf9f5624', '/upload/b6/467d055e2e44d0bb69cebb953b0953.png', 1529987431, 1529987431, 'png'),
(13, '804648688.png', '3008eed4230b94e00d508f63f5b933ff', 'bd7b7f67aedfaf708204cae332422136bbd0446a', '/upload/30/08eed4230b94e00d508f63f5b933ff.png', 1530003754, 1530003754, 'png'),
(14, 'WechatIMG17.jpeg', 'c903f338a9dd7144c11fc13f42ed10d0', '0e34ba36cd88a7d99e55dac40e834807f1515943', '/upload/c9/03f338a9dd7144c11fc13f42ed10d0.jpeg', 1530112661, 1530112661, 'jpeg');

-- --------------------------------------------------------

--
-- 表的结构 `lv_link`
--

CREATE TABLE IF NOT EXISTS `lv_link` (
  `id` int(11) unsigned NOT NULL,
  `name` varchar(255) DEFAULT NULL,
  `url` text,
  `more` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- 表的结构 `lv_nav`
--

CREATE TABLE IF NOT EXISTS `lv_nav` (
  `id` int(11) unsigned NOT NULL,
  `name` text,
  `excerpt` text,
  `more` text
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `lv_nav`
--

INSERT INTO `lv_nav` (`id`, `name`, `excerpt`, `more`) VALUES
(1, '主导航', 'main', '"{}"'),
(3, '底部导航', '底部导航', NULL);

-- --------------------------------------------------------

--
-- 表的结构 `lv_nav_item`
--

CREATE TABLE IF NOT EXISTS `lv_nav_item` (
  `id` int(11) unsigned NOT NULL,
  `nav_id` int(11) DEFAULT '0' COMMENT '属于的导航组的id',
  `parent_id` int(11) DEFAULT '0' COMMENT '父级导航项的id',
  `name` text COMMENT '导航项的名称',
  `type` int(11) DEFAULT NULL COMMENT '导航项类别，1栏目2单页3内容',
  `item_id` int(11) DEFAULT NULL COMMENT '导航项实际id即type所对应类型的id',
  `more` text,
  `list_order` int(11) DEFAULT '0',
  `link` text
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `lv_nav_item`
--

INSERT INTO `lv_nav_item` (`id`, `nav_id`, `parent_id`, `name`, `type`, `item_id`, `more`, `list_order`, `link`) VALUES
(1, 1, 0, 'item1', 1, 1, NULL, 0, NULL),
(2, 1, 0, 'fix', 4, 0, 'null', 0, 'www.baidu.com'),
(3, 1, 1, 'update', 3, 1, 'null', 0, NULL);

-- --------------------------------------------------------

--
-- 表的结构 `lv_post`
--

CREATE TABLE IF NOT EXISTS `lv_post` (
  `id` int(11) NOT NULL,
  `post_status` tinyint(3) DEFAULT '1' COMMENT '文章状态1正常0不通过',
  `comment_status` tinyint(3) DEFAULT '1' COMMENT '评论状态1允许评论0禁止评论',
  `user_id` bigint(20) DEFAULT NULL COMMENT '发布用户的id',
  `is_top` tinyint(3) DEFAULT '0' COMMENT '是否置顶1置顶0正常',
  `is_recommend` tinyint(3) DEFAULT '0' COMMENT '是否推荐1推荐0普通',
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `delete_time` int(11) DEFAULT NULL,
  `published_time` int(11) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL COMMENT '标题',
  `author` varchar(255) DEFAULT NULL COMMENT '作者',
  `keywords` varchar(255) DEFAULT NULL COMMENT '关键字',
  `excerpt` varchar(255) DEFAULT NULL COMMENT '摘要',
  `source` varchar(255) DEFAULT NULL COMMENT '来源',
  `content` text COMMENT '内容',
  `more` text COMMENT '扩展属性',
  `template_id` int(11) DEFAULT '0'
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8 COMMENT='内容表';

--
-- 转存表中的数据 `lv_post`
--

INSERT INTO `lv_post` (`id`, `post_status`, `comment_status`, `user_id`, `is_top`, `is_recommend`, `create_time`, `update_time`, `delete_time`, `published_time`, `title`, `author`, `keywords`, `excerpt`, `source`, `content`, `more`, `template_id`) VALUES
(13, 1, 1, 1, 0, 0, 1529944158, 1529948398, NULL, 1516850047, '原生JS和JQUERY版实现文件上传功能', '', '', '', NULL, '<p><span class="ql-font-serif">	主要是应用到了FormData对象，HTML5新增的对象，就目前来看兼容性还可以。</span></p><p><span class="ql-font-serif">	如果进行断点调试，在向FormData对象添加数据后，在控制台显示的变量里是看不见的，看到的是FormData原型，存储的数据没有以对象属性的方式体现，可以理解为类的私有字段，外界访问不到。可以通过FormData.get("键")的方式来取数据。</span></p><pre class="ql-syntax" spellcheck="false">&lt;!doctype&nbsp;html&gt;\n&lt;html&nbsp;lang="zh"&gt;\n&lt;head&gt;\n&lt;meta&nbsp;charset="utf-8"&gt;\n&lt;title&gt;HTML5&nbsp;Ajax&nbsp;Uploader&lt;/title&gt;\n&lt;script&nbsp;src="jquery-2.1.1.min.js"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&nbsp;\n&lt;body&gt;\n&lt;p&gt;&lt;input&nbsp;type="file"&nbsp;id="upfile"&gt;&lt;/p&gt;\n&lt;p&gt;&lt;input&nbsp;type="button"&nbsp;id="upJS"&nbsp;value="用原生JS上传"&gt;&lt;/p&gt;\n&lt;p&gt;&lt;input&nbsp;type="button"&nbsp;id="upJQuery"&nbsp;value="用jQuery上传"&gt;&lt;/p&gt;\n&lt;script&gt;\n/*原生JS版*/\ndocument.getElementById("upJS").onclick&nbsp;=&nbsp;function()&nbsp;{\n&nbsp;/*&nbsp;FormData&nbsp;是表单数据类&nbsp;*/\n&nbsp;var&nbsp;fd&nbsp;=&nbsp;new&nbsp;FormData();\n&nbsp;var&nbsp;ajax&nbsp;=&nbsp;new&nbsp;XMLHttpRequest();\n&nbsp;fd.append("upload",&nbsp;1);\n&nbsp;/*&nbsp;把文件添加到表单里&nbsp;*/\n&nbsp;fd.append("upfile",&nbsp;document.getElementById("upfile").files[0]);\n&nbsp;ajax.open("post",&nbsp;"test.php",&nbsp;true);\n&nbsp;\n&nbsp;ajax.onload&nbsp;=&nbsp;function&nbsp;()&nbsp;{\n&nbsp;console.log(ajax.responseText);\n&nbsp;};\n&nbsp;\n&nbsp;ajax.send(fd);\n&nbsp;&nbsp;\n}\n&nbsp;\n/*&nbsp;jQuery&nbsp;版&nbsp;*/\n$(''#upJQuery'').on(''click'',&nbsp;function()&nbsp;{\n&nbsp;var&nbsp;fd&nbsp;=&nbsp;new&nbsp;FormData();\n&nbsp;fd.append("upload",&nbsp;1);\n&nbsp;fd.append("upfile",&nbsp;$("#upfile").get(0).files[0]);\n&nbsp;$.ajax({\n&nbsp;url:&nbsp;"test.php",\n&nbsp;type:&nbsp;"POST",\n&nbsp;processData:&nbsp;false,//不可缺少\n&nbsp;contentType:&nbsp;false,//不可缺少&nbsp;否则ajax会报错\n&nbsp;data:&nbsp;fd,\n&nbsp;success:&nbsp;function(d)&nbsp;{\n&nbsp;console.log(d);\n&nbsp;}\n&nbsp;});\n});\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>', '[]', 0),
(14, 1, 1, 1, 0, 0, 1529947525, 1529947552, NULL, 2147483647, 'JQUERY简单图片预览效果INPUT FILE绝对路径', '', '', '', NULL, '<p><strong>HTML代码</strong></p><pre class="ql-syntax" spellcheck="false">&lt;input&nbsp;id="update"&nbsp;type="file"&nbsp;/&gt;\n&lt;img&nbsp;id="img"&nbsp;alt=""&nbsp;/&gt;\n</pre><p><strong>JS代码</strong></p><pre class="ql-syntax" spellcheck="false">&lt;script&gt;\n$("#update").change(function(){\nvar&nbsp;objUrl&nbsp;=&nbsp;getObjectURL(this.files[0])&nbsp;;\nconsole.log("objUrl&nbsp;=&nbsp;"+objUrl)&nbsp;;\nif&nbsp;(objUrl)&nbsp;{\n$("#img").attr("src",&nbsp;objUrl)&nbsp;;\n}\n})&nbsp;;\nfunction&nbsp;getObjectURL(file)&nbsp;{\nvar&nbsp;url&nbsp;=&nbsp;null&nbsp;;\nif&nbsp;(window.createObjectURL!=undefined)&nbsp;{&nbsp;//&nbsp;basic\nurl&nbsp;=&nbsp;window.createObjectURL(file)&nbsp;;\n}&nbsp;else&nbsp;if&nbsp;(window.URL!=undefined)&nbsp;{&nbsp;//&nbsp;mozilla(firefox)\nurl&nbsp;=&nbsp;window.URL.createObjectURL(file)&nbsp;;\n}&nbsp;else&nbsp;if&nbsp;(window.webkitURL!=undefined)&nbsp;{&nbsp;//&nbsp;webkit&nbsp;or&nbsp;chrome\nurl&nbsp;=&nbsp;window.webkitURL.createObjectURL(file)&nbsp;;\n}\nreturn&nbsp;url&nbsp;;\n}\n&lt;/script&gt;\n</pre>', '[]', 0),
(24, 1, 1, 1, 0, 0, 1530113254, 1530113254, NULL, 1530113033, 'JQUERY的PARENT与PARENTS方法', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box;"><strong style="box-sizing: border-box;">概览：</strong></span></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">parent与parents方法都用来获取当前选择元素的父元素，但不同的是，<strong style="box-sizing: border-box;">parent选择的是直接父亲元素</strong>，即只向上一级别dom树进行遍历，而<strong style="box-sizing: border-box;">parents返回所选择元素的所有祖先元素</strong>一路向上直到根元素&lt;html&gt;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">jQuery parent(selector) 方法</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); text-indent: 2em; line-height: 2em;">当调用parent方法的元素不唯一时（比如使用类选择器选出的元素）所获的的父元素可能也不是一种同一种类型的元素，可以加个选择器进行筛选：</p><pre class="brush:html;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;div&nbsp;class=&quot;ancestors&quot;&gt;\n&nbsp;&nbsp;&lt;div&nbsp;style=&quot;width:500px;&quot;&gt;div&nbsp;(曾祖父)\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;ul&nbsp;(祖父)&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;li&nbsp;(直接父)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;span&lt;/span&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&lt;/div&gt;\n\n&nbsp;&nbsp;&lt;div&nbsp;style=&quot;width:500px;&quot;&gt;div&nbsp;(祖父)&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;p&nbsp;(直接父)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;span&lt;/span&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/p&gt;&nbsp;\n&nbsp;&nbsp;&lt;/div&gt;\n&lt;/div&gt;\n&lt;script&gt;\n&nbsp;$(&quot;span&quot;).parent().css({&quot;color&quot;:&quot;red&quot;,&quot;border&quot;:&quot;2px&nbsp;solid&nbsp;red&quot;});\n&lt;/script&gt;</pre><p><img src="/upload/editor/image/20180627/1530113123631958.png" alt="804648688.png"/></p><p><br/></p><pre class="brush:html;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;script&gt;\n&nbsp;$(&quot;span&quot;).parent(&#39;p&#39;).css({&quot;color&quot;:&quot;green&quot;,&quot;border&quot;:&quot;2px&nbsp;solid&nbsp;red&quot;});\n&lt;/script&gt;</pre><p><br/></p><p><img src="/upload/editor/image/20180627/1530113183822348.png" alt="8050267.png"/></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">jQuery parents(selector) 方法</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); text-indent: 2em; line-height: 2em;">寻找到所选择元素的所有父元素，可以添加选择器进行筛选，比如&lt;td&gt;中的某个按钮(其在td中因此其父元素是td)点击后删除本行即删除&lt;tr&gt;</p><pre class="brush:html;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$(&#39;#delete_book&#39;).on(&#39;click&#39;,function(){\n&nbsp;&nbsp;&nbsp;&nbsp;$(this).parents(&#39;td&#39;).remove();\n&nbsp;&nbsp;&nbsp;&nbsp;//$(this).parent().parent().remove();也可以但是不灵活\n});</pre><p><img src="/upload/editor/image/20180627/1530113222317131.png" alt="80572826.png"/></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">jQuery parentsUntil(selector) 方法</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); text-indent: 2em; line-height: 2em;">parentsUntil() 方法返回介于两个给定元素之间的所有祖先元素。下面的例子返回介于 &lt;span&gt; 与 &lt;div&gt; 元素之间的所有祖先元素：</p><pre class="brush:html;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$(&quot;span&quot;).parentsUntil(&quot;div&quot;);</pre><p><img src="/upload/editor/image/20180627/1530113243520024.png" alt="81036111.png"/></p>', '[]', 0),
(25, 1, 1, 1, 0, 0, 1530114859, 1530114859, NULL, 1530114827, '在IFRAME打开页面时候如何传入POST参数', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">解决方案</h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); text-indent: 2em; line-height: 2em;">使用表单提交的方式，form的action属性设置为需要打开的url，target属性设置为iframe的id即可，这样form将数据post提交到需要在iframe中打开的url，服务器进行处理后返回的页面就会在iframe中打开。</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;iframe&nbsp;name=&quot;ifr&quot;&gt;&lt;/iframe&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;sendData(url,data)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;form&nbsp;=&nbsp;document.createElement(&#39;form&#39;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.method&nbsp;=&nbsp;&#39;post&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.action&nbsp;=&nbsp;url;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.target&nbsp;=&nbsp;&#39;ifr&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.style.display&nbsp;=&nbsp;&#39;none&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;input&nbsp;=&nbsp;document.createElement(&#39;input&#39;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//...\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input.name&nbsp;=&nbsp;&#39;data&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input.value&nbsp;=&nbsp;JSON.stringify(data);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.appendChild(input);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.body.appendChild(form);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form.submit();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.body.removeChild(form);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//sendData(&#39;http:&nbsp;127.0.0.1/data.php&#39;,{v:&nbsp;1,key:&nbsp;&#39;key&#39;});\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</pre><p><br/></p>', '[]', 0),
(26, 1, 1, 1, 0, 0, 1530114962, 1530114962, NULL, 1530114939, 'THINKPHP5使用笔记', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">1.请求参数获取<br/></h1><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">获取形式为数组的参数需要加上/a来将参数转化为数组,翻阅源码得知，/d将参数转换为数字，/f转换为浮点数，/d布尔型，/s字符串，默认是转换为字符串。</p></li></ol><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$request-&gt;param(&#39;ids/a&#39;);</pre><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">2.自定义异常处理<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">&nbsp;&nbsp;&nbsp;&nbsp;1.首先自定义一场处理类，重写render方法，该方法中会捕获所有异常，如果需要调用系统自带的异常处理，则直接调用父亲类render方法即可，parent::render($e);</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">class&nbsp;ExceptionHandler&nbsp;extends&nbsp;Handle\n{\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$code;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$msg;\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$errorCode;\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;render(Exception&nbsp;$e)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($e&nbsp;instanceof&nbsp;BaseException){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result=[\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;msg&#39;=&gt;$e-&gt;msg,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;error_code&#39;=&gt;$e-&gt;errorCode\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;json($result,$e-&gt;code);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(config(&#39;app_debug&#39;)){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;parent::render($e);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;code=&#39;500&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;RecordException($e);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result=[\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;msg&#39;=&gt;&#39;服务器内部问题&#39;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;error_code&#39;=&gt;&#39;999&#39;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;json($result,$this-&gt;code);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;RecordException(Exception&nbsp;$e){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log::init([\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;type&#39;=&gt;&#39;File&#39;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;path&#39;=&gt;LOG_PATH,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;level&#39;=&gt;[&#39;error&#39;]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Log::record($e-&gt;getMessage(),&#39;error&#39;);\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.然后在配置文件中将处理异常的配置改为自定义的异常处理类，留空则为使用系统默认的异常处理类</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&#39;exception_handle&#39;=&gt;&nbsp;&#39;\\app\\lib\\exception\\ExceptionHandler&#39;</pre><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">3.日志使用</h1><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">4.实现拦截器</h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">首先新建一个baseController，重写控制器的_initialize方法，然后将需要进行拦截的控制器继承该控制器即可，需要注意的是，登录方法所在的控制器不要继承该控制器，因为需要登录时，服务器段肯定是没有该用户的信息的。</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">//cmf中的实现方式\npublic&nbsp;function&nbsp;_initialize()\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;监听admin_init\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hook(&#39;admin_init&#39;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent::_initialize();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$session_admin_id&nbsp;=&nbsp;session(&#39;ADMIN_ID&#39;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!empty($session_admin_id))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$user&nbsp;=&nbsp;Db::name(&#39;user&#39;)-&gt;where([&#39;id&#39;&nbsp;=&gt;&nbsp;$session_admin_id])-&gt;find();\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!$this-&gt;checkAccess($session_admin_id))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;error(&quot;您没有访问权限！&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;assign(&quot;admin&quot;,&nbsp;$user);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($this-&gt;request-&gt;isPost())&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;error(&quot;您还没有登录！&quot;,&nbsp;url(&quot;admin/public/login&quot;));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&quot;Location:&quot;&nbsp;.&nbsp;url(&quot;admin/public/login&quot;));\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">//手动撸的demo\n&nbsp;public&nbsp;function&nbsp;__construct(Request&nbsp;$request&nbsp;=&nbsp;null)\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parent::__construct($request);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result=$this-&gt;validate([&#39;token&#39;=&gt;$request-&gt;cookie(&#39;token&#39;)],&#39;AdminTokenValidate&#39;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($result!==true){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($request-&gt;module()==&#39;index&#39;&amp;&amp;$request-&gt;controller()==&#39;Index&#39;&amp;&amp;$request-&gt;action()==&#39;login&#39;){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;redirect(&#39;/index/Index/login&#39;);//直接使用框架内的重定向方法即可\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;//$this-&gt;error()实现跳转的原理实在内部做一个Response对象，然后通过抛出HttpRuntimeException异常来将该对象返回。\n&nbsp;&nbsp;&nbsp;&nbsp;//因为框架中的所有返回都是底层都是通过Response来实现的redirect也是一样，只是封装的形式不同。</pre><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">5.ThinkPHP5项目部署到nginx上<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">ThinkPHP5项目部署到nginx上出现500 502 404 大多是因为nginx没有开启pathinfo的功能解决方式<br/></p><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">直接改nginx/conf/vhost/域名.conf文件，将开启pathinfo隐藏index.php的功能加上</p></li></ol><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">#开启pathinfo\nlocation&nbsp;~&nbsp;[^/]\\.php(/|$)&nbsp;\n{&nbsp;&nbsp;set&nbsp;$path_info&nbsp;&quot;&quot;;&nbsp;&nbsp;\n#定义变量&nbsp;\n$real_script_name，用于存放真实地址&nbsp;&nbsp;\nset&nbsp;$real_script_name&nbsp;$fastcgi_script_name;&nbsp;&nbsp;\n#如果地址与引号内的正则表达式匹配&nbsp;&nbsp;\nif&nbsp;($fastcgi_script_name&nbsp;~&nbsp;&quot;^(.+?\\.php)(/.+)$&quot;)&nbsp;\n{&nbsp;&nbsp;#将文件地址赋值给变量&nbsp;$real_script_name&nbsp;&nbsp;set&nbsp;$real_script_name&nbsp;$1;&nbsp;&nbsp;\n#将文件地址后的参数赋值给变量&nbsp;$path_info&nbsp;&nbsp;set&nbsp;$path_info&nbsp;$2;&nbsp;&nbsp;}&nbsp;&nbsp;\n#配置fastcgi的一些参数&nbsp;&nbsp;fastcgi_pass&nbsp;unix:/tmp/php-cgi.sock;&nbsp;&nbsp;\nfastcgi_index&nbsp;index.php;&nbsp;&nbsp;\nfastcgi_param&nbsp;SCRIPT_FILENAME&nbsp;$document_root$real_script_name;&nbsp;&nbsp;\nfastcgi_param&nbsp;SCRIPT_NAME&nbsp;$real_script_name;&nbsp;&nbsp;\nfastcgi_param&nbsp;PATH_INFO&nbsp;$path_info;&nbsp;&nbsp;\ninclude&nbsp;&nbsp;fastcgi_params;\n}\n#隐藏index.php\n&nbsp;location&nbsp;/&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!-e&nbsp;$request_filename)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rewrite&nbsp;^(.*)$&nbsp;/index.php?s=$1&nbsp;last;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">2.如果用的是lnmp，那么可以直接用lnmp自带的一些配置文件</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">server\n&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listen&nbsp;80;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#listen&nbsp;[::]:80;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;server_name&nbsp;www.xxx.cn&nbsp;xxx.cn;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;index.html&nbsp;index.htm&nbsp;index.php&nbsp;default.html&nbsp;default.htm&nbsp;default.php;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;&nbsp;/home/wwwroot/www.xxx.cn/public;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#改成这样\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;enable-php-pathinfo.conf;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;thinkphp.conf;\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;.*\\.(gif|jpg|jpeg|png|bmp|swf)$\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expires&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;30d;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location&nbsp;~&nbsp;/\\.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deny&nbsp;all;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;access_log&nbsp;&nbsp;/home/wwwlogs/www.xxx.cn.log;\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">3.如果还不行那么修改 nginx/conf中的fastcgi.conf</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">#fastcgi_param&nbsp;PHP_ADMIN_VALUE&nbsp;&quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;\nfastcgi_param&nbsp;PHP_ADMIN_VALUE&nbsp;&quot;open_basedir=$document_root/../:/tmp/:/proc/&quot;;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">重启下nginx</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">使用nginx/sbin目录下的nginx命令</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">nginx&nbsp;－s&nbsp;reload</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">参考链接：<a href="https://www.cnblogs.com/richerdyoung/p/6514382.html" style="box-sizing: border-box; background-color: transparent; color: rgb(34, 136, 150); text-decoration-line: none; transition: 0.5s;">https://www.cnblogs.com/richerdyoung/p/6514382.html</a></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<a href="https://www.cnblogs.com/lobtao/articles/7251806.html" style="box-sizing: border-box; background-color: transparent; color: rgb(34, 136, 150); text-decoration-line: none; transition: 0.5s;">https://www.cnblogs.com/lobtao/articles/7251806.html</a></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;http://blog.csdn.net/leiflyy/article/details/68063423</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.jb51.net/article/120041.htm" style="box-sizing: border-box; background-color: transparent; color: rgb(34, 136, 150); text-decoration-line: none; transition: 0.5s;">http://www.jb51.net/article/120041.htm</a></p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">6.关于修改器与获取器失效</h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">获取器不调用是不会自动触发的，文档里有说明如下：</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box; color: rgba(0, 0, 0, 0.87); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 15.96px; background-color: #FFFFFF;">获取器只有<span style="box-sizing: border-box; font-size: 15.96px; color: #FF0000;">当获取某个数据属性</span>的时候自动触发，如果你要获取包含获取器处理的全部数据属性的话，可以使用下面的方法：</span></p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$user&nbsp;=&nbsp;User::get(1);//&nbsp;获取全部获取器数据\ndump($user-&gt;toArray());</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box; color: rgba(0, 0, 0, 0.87); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Arial, Helvetica, sans-serif; font-size: 15.96px; background-color: #FFFFFF;"></span>只想要原始数据的话</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$user&nbsp;=&nbsp;User::get(1);\n//&nbsp;通过获取器获取字段\necho&nbsp;$user-&gt;status;\n//&nbsp;获取原始字段数据\necho&nbsp;$user-&gt;getData(&#39;status&#39;);\n//&nbsp;获取全部原始数据\ndump($user-&gt;getData());</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">修改器也一样，在做项目的时候直接用数据初始化模型直接save后是不会触发修改器的，文档里有说明</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">修改器的作用是可以在<span style="box-sizing: border-box; color: #FF0000;">数据赋值</span>的时候自动进行转换处理；即不赋值是不会触发修改器的。</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$member=new&nbsp;MemberModel($request-&gt;param());\n$member-&gt;allowField(true)-&gt;save();\n//以上代码是不会触发修改器的\n\n//官方提供的触发方法除了赋值外还有以下两种方式\n$user&nbsp;=&nbsp;new&nbsp;User();\n$data[&#39;name&#39;]&nbsp;=&nbsp;&#39;THINKPHP&#39;;\n$data[&#39;email&#39;]&nbsp;=&nbsp;&#39;thinkphp@qq.com&#39;;\n$user-&gt;data($data,&nbsp;true);\n$user-&gt;save();\necho&nbsp;$user-&gt;name;&nbsp;//&nbsp;thinkphp\n\n\n$user&nbsp;=&nbsp;new&nbsp;User();\n$data[&#39;name&#39;]&nbsp;=&nbsp;&#39;THINKPHP&#39;;\n$data[&#39;email&#39;]&nbsp;=&nbsp;&#39;thinkphp@qq.com&#39;;\n$user-&gt;save($data);\necho&nbsp;$user-&gt;name;&nbsp;//&nbsp;thinkphp</pre><p><br/></p>', '[]', 0),
(27, 1, 1, 1, 0, 0, 1530115684, 1530115684, NULL, 1530115536, 'JS判断变量是否是数组', '', '', '', NULL, '<h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">1. typeof真的那么厉害吗？？</h2><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">var&nbsp;ary&nbsp;=&nbsp;[1,23,4];\nconsole.log(typeof&nbsp;ary);&nbsp;//输出结果是Object</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;"><span style="box-sizing: border-box; font-family: tahoma, arial, 宋体; background-color: #FFFFFF;">上面的办法并不能实时的检测出是否是数组，只能判断其类型，所以说typeof判断基本类型数据还是挺好的，但是不能准确测试出是否是数组。</span></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">2.instanceof 判断</h2><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">var&nbsp;ary&nbsp;=&nbsp;[1,23,4];\nconsole.log(ary&nbsp;instanceof&nbsp;Array)//true;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;"><span style="box-sizing: border-box; font-family: tahoma, arial, 宋体; background-color: #FFFFFF;">从输出的效果来看，还是挺令人满意的，能准确的检测出数据类型是否是数组。</span></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 2em; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">3.原型链方法</h2><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">var&nbsp;ary&nbsp;=&nbsp;[1,23,4];\nconsole.log(ary.__proto__.constructor==Array);//true\nconsole.log(ary.constructor==Array)//true&nbsp;这两段代码是一样的</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;"><span style="box-sizing: border-box; font-family: tahoma, arial, 宋体; background-color: #FFFFFF;"><strong style="box-sizing: border-box; color: rgb(0, 0, 255); font-size: 12px;"></strong></span>ps:<span style="box-sizing: border-box; font-family: tahoma, arial, 宋体; background-color: #FFFFFF;">在IE早期版本里面__proto__是没有定义的,兼容性一般。</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; color: rgba(0, 0, 0, 0.5); font-size: 14px; white-space: normal; padding: 5px 0px; font-family: tahoma, arial, 宋体; background-color: rgb(255, 255, 255);"><strong style="box-sizing: border-box;"><span style="box-sizing: border-box; line-height: 21.6px; color: #FF0000; font-size: 18px;">总结一下第2种方法和第3种方法局限性</span></strong></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">instanceof 和constructor 判断的变量，必须在当前页面声明的，比如，一个页面（父页面）有一个框架，框架中引用了一个页面（子页面），在子页面中声明了一个ary，并将其赋值给父页面的一个变量，这时判断该变量，Array == object.constructor;会返回false；</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;"><span style="box-sizing: border-box; font-family: tahoma, arial, 宋体; background-color: #FFFFFF;"></span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; color: rgba(0, 0, 0, 0.5); font-size: 14px; white-space: normal; padding: 5px 0px; font-family: tahoma, arial, 宋体; background-color: rgb(255, 255, 255); line-height: 2em;"><strong style="box-sizing: border-box;">原因：</strong></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">1、array属于引用型数据，在传递过程中，仅仅是引用地址的传递。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">2、每个页面的Array原生对象所引用的地址是不一样的，在子页面声明的array，所对应的构造函数，是子页面的Array对象；父页面来进行判断，使用的Array并不等于子页面的Array；</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">4.通用的方法</h2><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">var&nbsp;ary&nbsp;=&nbsp;[1,23,4];\nfunction&nbsp;isArray(o){\nreturn&nbsp;Object.prototype.toString.call(o)==&#39;[object&nbsp;Array]&#39;;\n}\nconsole.log(isArray(ary));</pre><h2 style="white-space: normal; box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; background-color: rgb(245, 245, 245);">5.JS高程3提供的标准解答</h2><pre class="brush:js;toolbar:false" style="margin-top: 0px; margin-bottom: 10px; padding: 9.5px; border-radius: 4px; background-color: rgb(245, 245, 245); box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: 1px solid rgb(204, 204, 204);">var&nbsp;ary&nbsp;=&nbsp;[1,23,4];\nArray.isArray(ary);</pre><p><br/></p>', '[]', 0);
INSERT INTO `lv_post` (`id`, `post_status`, `comment_status`, `user_id`, `is_top`, `is_recommend`, `create_time`, `update_time`, `delete_time`, `published_time`, `title`, `author`, `keywords`, `excerpt`, `source`, `content`, `more`, `template_id`) VALUES
(28, 1, 1, 1, 0, 0, 1530117558, 1530117558, NULL, 1530115742, 'JWT-- JSON WEB TOKEN', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-weight: 400; line-height: 1.1; color: rgb(0, 0, 0);">什么是JWT</h1><blockquote style="box-sizing: border-box; padding: 10px 20px; margin: 0px 0px 20px; font-size: 17.5px; border-left: 5px solid rgb(238, 238, 238);"><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 2em;">Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（<a href="https://tools.ietf.org/html/rfc7519" target="_blank" style="box-sizing: border-box; background-color: transparent; color: rgb(34, 136, 150); text-decoration-line: none; transition: 0.5s;">(RFC 7519</a>).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。</p></blockquote><p><br/></p><h2 style="box-sizing: border-box; font-weight: 400; line-height: 1.1; color: rgb(0, 0, 0); margin: 0px 0px 30px; font-size: 30px;">JWT的构成</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一部分我们称它为头部（header),第二部分我们称其为载荷（payload, 类似于飞机上承载的物品)，第三部分 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 是签证(signature).</p><h3 style="box-sizing: border-box; font-weight: 400; line-height: 1.1; color: rgb(0, 0, 0); margin: 0px 0px 30px; font-size: 24px;">header</h3><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">jwt的头部承载两部分信息：</p><ul class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px;"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">声明类型，这里是jwt</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">声明加密的算法 通常直接使用 HMAC SHA256</p></li></ul><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">完整的头部就像下面这样的JSON：</p><pre class="hljs undefined" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">{\n&nbsp;&nbsp;&#39;typ&#39;:&nbsp;&#39;JWT&#39;,\n&nbsp;&nbsp;&#39;alg&#39;:&nbsp;&#39;HS256&#39;\n}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">然后将头部进行base64编码，构成了第一部分.</p><pre class="hljs undefined" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</pre><h3 style="box-sizing: border-box; font-weight: 400; line-height: 1.1; color: rgb(0, 0, 0); margin: 0px 0px 30px; font-size: 24px;">playload</h3><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">载荷就是存放有效信息的地方。这个名字像是特指飞机上承载的货品，这些有效信息包含三个部分</p><ul class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px;"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">标准中注册的声明</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">公共的声明</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">私有的声明</p></li></ul><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">标准中注册的声明</strong>&nbsp;(建议但不强制使用) ：</p><ul class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px;"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">iss</strong>: jwt签发者</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">sub</strong>: jwt所面向的用户</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">aud</strong>: 接收jwt的一方</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">exp</strong>: jwt的过期时间，这个过期时间必须要大于签发时间</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">nbf</strong>: 定义在什么时间之前，该jwt都是不可用的.</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">iat</strong>: jwt的签发时间</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">jti</strong>: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。</p></li></ul><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">公共的声明</strong>&nbsp;：<br/>公共的声明可以添加任何的信息，一般添加用户的相关信息或其他业务需要的必要信息.但不建议添加敏感信息，因为该部分在客户端可解密.</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">私有的声明</strong>&nbsp;：<br/>私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归类为明文信息。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">定义一个payload:</p><pre class="hljs undefined" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">{\n&nbsp;&nbsp;&quot;sub&quot;:&nbsp;&quot;1234567890&quot;,\n&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;John&nbsp;Doe&quot;,\n&nbsp;&nbsp;&quot;admin&quot;:&nbsp;true\n}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">然后将其进行base64编码，得到Jwt的第二部分。</p><pre class="hljs undefined" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</pre><h3 style="box-sizing: border-box; font-weight: 400; line-height: 1.1; color: rgb(0, 0, 0); margin: 0px 0px 30px; font-size: 24px;">signature</h3><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">jwt的第三部分是一个签证信息，这个签证信息由三部分组成：</p><ul class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px;"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">header (base64后的)</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">payload (base64后的)</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">secret</p></li></ul><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">这个部分需要base64加密后的header和base64加密后的payload使用<code style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 12.6px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">.</code>连接组成的字符串，然后通过header中声明的加密方式进行加盐<code style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 12.6px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">secret</code>组合加密，然后就构成了jwt的第三部分。</p><pre class="hljs undefined" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">//&nbsp;javascript\nvar&nbsp;encodedString&nbsp;=&nbsp;base64UrlEncode(header)&nbsp;+&nbsp;&#39;.&#39;&nbsp;+&nbsp;base64UrlEncode(payload);\n\nvar&nbsp;signature&nbsp;=&nbsp;HMACSHA256(encodedString,&nbsp;&#39;secret&#39;);&nbsp;//&nbsp;TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">将这三部分用<code style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 12.6px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">.</code>连接成一个完整的字符串,构成了最终的jwt:</p><pre class="hljs undefined" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&nbsp;&nbsp;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;"><strong style="box-sizing: border-box;">注意：secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。</strong></p><h3 style="box-sizing: border-box; font-weight: 400; line-height: 1.1; color: rgb(0, 0, 0); margin: 0px 0px 30px; font-size: 24px;">如何应用</h3><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px;"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">client发送登陆信息至服务器，服务器验证信息正确后签发JWT</p></li></ol><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">public&nbsp;function&nbsp;AdminLogin(Request&nbsp;$request){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(new&nbsp;AdminLoginValidate())-&gt;goCheck();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$admin_user_name=$request-&gt;param(&#39;admin_user_name&#39;);&nbsp;&nbsp;&nbsp;$admin=AdminModel::getByAdminUserName($admin_user_name);&nbsp;&nbsp;&nbsp;if($admin&amp;&amp;$admin-&gt;admin_user_password==md5($request-&gt;param(&#39;admin_user_password&#39;)))&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$payload=[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;admin_user_name&#39;=&gt;$admin_user_name,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;scope&#39;=&gt;ScopeEnum::Admin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$jwt=Token::generateJWT($payload);//签发jwt&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cache::set($jwt,json_encode($payload));//将jwt存入缓存以便client访问时验证&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;json(Result::returnResult(StatusCode::$SUCCESS,$jwt));//将jwt返回给client&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;else{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;AdminLoginInfoError();&nbsp;&nbsp;&nbsp;}}</pre><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">public&nbsp;static&nbsp;function&nbsp;generateJWT($payload){&nbsp;&nbsp;&nbsp;&nbsp;$header=[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;typ&#39;=&gt;&#39;JWT&#39;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;alg&#39;=&gt;&#39;md5&#39;//可选用其他加密算法&nbsp;&nbsp;&nbsp;&nbsp;];&nbsp;&nbsp;&nbsp;&nbsp;$encoding=base64_encode(json_encode($header)).base64_encode(json_encode($payload));&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;md5($encoding.config(&#39;security.jwttoken&#39;));}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">2.client访问服务器时在请求头里加入<code style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 12.6px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">Authorization</code>，并加上<code style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 12.6px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">Bearer</code>标注：</p><pre class="hljs undefined" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">fetch(&#39;api/user/1&#39;,&nbsp;{&nbsp;&nbsp;headers:&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&#39;Authorization&#39;:&nbsp;&#39;Bearer&nbsp;&#39;&nbsp;+&nbsp;token&nbsp;&nbsp;}})</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">3.服务端验证token，如果验证通过就会返回相应的资源。</p><p><img src="/upload/editor/image/20180628/1530117514950327.png" alt="11122412852.png"/></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 2em; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">总结</h2><h3 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 24px; white-space: normal; background-color: rgb(245, 245, 245);">优点</h3><ul class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">因为json的通用性，所以JWT是可以进行跨语言支持的，像JAVA,JavaScript,NodeJS,PHP等很多语言都可以使用。</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">因为有了payload部分，所以JWT可以在自身存储一些其他业务逻辑所必要的非敏感信息。</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">便于传输，jwt的构成非常简单，字节占用很小，所以它是非常便于传输的。</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">它不需要在服务端保存会话信息, 所以它易于应用的扩展</p></li></ul><h3 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 24px; white-space: normal; background-color: rgb(245, 245, 245);">安全相关</h3><ul class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">不应该在jwt的payload部分存放敏感信息，因为该部分是客户端可解密的部分。</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">保护好secret私钥，该私钥非常重要。</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">如果可以，请使用https协议</p></li><li><p><br/></p></li></ul><p><br/></p>', '[]', 0),
(29, 1, 1, 1, 0, 0, 1530117858, 1530117858, NULL, 1530117830, '2018百度校园招聘移动软件研发面试体验', '', '', '', NULL, '<h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">接到通知</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">10月12号晚上正跟溪溪语音扯完犊子准备录个歌放松一发的时候，来了百度的面试短信，当时还是很惊讶的，毕竟当时做笔试题的时候做的烂的跟翔一样，三道编程题全都没做出来，再加上本身是个渣硕，学校既不是985也不是211，自然对BAT这种大企业不敢抱有幻想。本来都打算不去了，毕竟去了也是当炮灰的份，不过跟溪溪商量了一发之后还是决定去一趟，可能也是不想给自己的就业季留遗憾吧，毕竟是百度，去面一趟回来还能吹个牛逼，美滋滋。</p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">出发进京<br/></h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">10月13号早上跟家人说了一声，get到活动经费之后，忽悠着溪溪跟着一起进京城（溪溪前天刚从京城回来），本来订的是下午两点五十二的票，中午十二点多吃完饭看时间还早，手痒拉着溪溪去Dota了一发，马勒戈壁的打完发现一点四十五了，赶紧打车去火车站，然而那天周五，济南堵的一匹，赶到之后取票完就剩五分钟就发车了，然而因为帝都要开大会的原因全城戒严，去北京的要单独安检好几遍，自然是没赶上车，出来之后改签到济南西站，6点21的车，坐着公交车晃晃悠悠的去了济南西，车上看了一遍手写了一遍几个常用的算法（选择，冒泡，快速，归并），然后就开始看在掘金上收藏的面试集合，内容多的一匹看的有点绝望，不过想想本身就没抱希望也就释然了。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">到了济南转了两趟地铁到了立水桥南的如家，在前台开房的时候前台工作人员居然还是老乡，聊了两句，说来北京五年了，听他的口音，全是北京味，一点家乡话都听不出来了，有点感慨。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">跟溪溪到了房间之后，交了个俩外卖，汉堡和驴肉火烧，吃完美滋滋的睡觉了。</p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">面试当天<br/></h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">当天早上订的七点的闹钟，但是我六点三十八的时候就醒了，多少还是有点紧张，毕竟是BAT里的那个B，起来接着看一些东西，七点四十五跟溪溪出发的，然而刚出门溪溪就把脚给崴了，我让溪溪在酒店休息等我，但是溪溪为了给我加buff不让我留遗憾，忍着剧痛，跟我一起去了，做了两地铁，骑了几分钟共享单车，到了百度大厦，通知上写让去C座，然而C座没开门，跟溪溪同时肚子疼，就一起去B座上了一发百度的厕所，来了总得留下点东西。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">回到C座门口，人不少，估摸着有一百人左右，9:00 C座开门了，进去签到领面试单，讲真在排队领面试单的时候还在想万一一查没有名字咋办，百度也是6，专门给霸面的同学预留来通道。领完面试单按投递岗位的不同进行排队，Java方向的果然还是多的一匹，移动软件研发的人还是相对较少的我排在第三个，不过后来好像又排过来不少。</p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">面试开始<br/></h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">开始放第一波人进面试场，移动软件研发是所有方向第一波进去的，当时走过去的时候就有点怕怕的，再加上天气有点冷，略显凄凉。面试地点是在百度食堂里，进去之后每个餐桌上都坐着一个面试官在摆弄着面前的MacBook Pro，按顺序坐到自己的面试官面前开始面试。<br/></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">一面<br/></h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); text-indent: 2em; line-height: 2em;">一面面我的是个女面试官，看着有点严厉，有种高中老师的感觉，虽然面上挂着笑但是还是有点怕。给过面试官简历后，面试官让做了个自我介绍，顺便问了问研究生期间的研究方向与做的东西，我就突突突嘴炮来一发，以为是面试的一部分，然而嘴炮完之后面试官说：“好了，现在咱们正式开始来问些Android方向的东西吧”。瞬间有点虚了。<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">上来先让画个Android的架构图（GG）。<span style="box-sizing: border-box; color: #000000;">第一道题就不会哎，只是模糊的记得是四层，最底层是Linux内核层，还隐约记得有个Framework层，剩下的模模糊糊说的，能看的出来面试官脸上有些不满意了。</span></span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">简单介绍一下做个的Android项目</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">Android四大组件</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">Service与Thread的区别(GG)</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">OOM与内存泄漏，怎么解决，举个例子</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">ANR，举个例子</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">MVP与MVC</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">WebView与Naive如何交互（半GG）</span><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">进程间通信(GG)</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">做个排序，正序和逆序（这个我顺便问了以下排序算法有没有要求，面试官说没有，那就好说了，直接选择排序搞起来）</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">一个简单的算法题，100-200间的所有素数打印出来并计算个数。（顺嘴问了一句有没有空间复杂度时间复杂度的要求，面试官说没有）还是比较简单的。</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">static的用法，写个单例模式。</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;"><span style="box-sizing: border-box; color: #000000;">一面大概就这些问题，最后面试官问我有没有什么想问的，面试官是做百度钱包的我就问了问百度内部现在用的技术，有没有用RxJava一类的（她说有），顺便讲解了以下他们是怎么保证安全性的（各种加密，SharedPreference里的字段也加密，APP加密，传输加密），问了问他们怎么处理内存泄露的（一般不发生，因为做之前会有详细的设计文档，包括那个部分怎么实现，并经过严格评估，如果发生了就用一些AS自带的工具），插件化，热更新什么的。</span></span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;"><span style="box-sizing: border-box; color: #000000;">就问了这些，完事之后面试官说我最好再看看基础的底层的东西，说这些底层的在工作中用到的还是很多的。哎，这些我当然知道，毕竟我也好久没复习Android了好多东西都忘了，使得好多最基本的东西，该会的东西都忘了，给人一种基础不稳的感觉。本来以为直接GG了原路返回，但是走到了C座门口被人叫住说不让从这出去，让穿过面试场从A座出去，好吧好吧，略显尴尬的在其他等待面试的人的注视下走回面试场，走回面试场就被叫住了，核对了以下我的名字，直接让我去二面，我隐约看到我那个面试单子上一面是否通过写了个Y。</span><br/></span></p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box; color: #FF0000;"><span style="box-sizing: border-box; color: #000000;">二面<br/></span></span></h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;"><span style="box-sizing: border-box; color: #000000;">二面应该是面的比较好也是比较轻松的了，面试我的是个年纪大不几岁的年轻面试官，戴着个眼睛穿着羽绒服比较典型的程序员，但是看起来不一面的面试官给人感觉轻松多了。</span></span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;"><span style="box-sizing: border-box; color: #000000;">同样先是自我介绍，完事之后这次不是提问了，而是让我随便说，根据我说的东西他问我，就跟聊天一样。</span></span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">扯了扯当时做的烟草项目，在说到了去年做的微博爬虫抱怨了一下现在微博数据多难爬，说到这他也爬过微博数据还挺有共鸣的，完事之后又把给溪溪做的那个Kindle书城项目给讲了讲，包括这个项目下一步准备做的东西，给他看了看做的微信小程序。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">期间问到的都是些基本小问题比如</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">TCP三次握手</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">HTTP与HTTPS</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">HTTP请求返回的都有啥</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">HTTP请求返回的文本与返回图片有啥区别</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">GET方式有没有请求体</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">随便写个SQL查询</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">什么时候走索引，用like的时候走不走索引</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">域名与IP</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">APP可不可以公用一个端口</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><span style="box-sizing: border-box; color: #FF0000;">随便讲些Java的东西（我讲了讲对象的引用，垃圾回收，lambda表达式）</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">东扯西扯就面完了，很轻松，面试官说他着没什么问题，然后在单子上写了个Y，问我还有什么想问的，我就跟他说说我曾经学的东西现在感觉基础的扎实很重要，说我曾经学过一段时间前端，他说：“前端没前途，赶紧放下”。哈哈哈哈哈哈。最后给的建议是现在这么学没事，但是工作之后一定要定准一个方向。</p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">三面<br/></h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">等了一段时间之后，被领到了三面的面试官面前，其实面之前就感觉应该会GG在三面，毕竟三面应该是领导面试了。<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">果然面试官一脸冷漠，因为已经说话说了一上午了嗓子有点累，自我介绍的时候声音小了点，就被挑刺了一脸不屑的说自我介绍声音小让大声点。完事之后说：“在学校很活跃啊，不过遗憾的是我不关注你这些，我更关注你的项目经验”。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">让介绍一个比较有意义的项目。我就讲了一个，然后也是全程被挑刺，其中还问了一下用的那个API获取的设备信息，当然我也是忘了。讲完之后被评价没有发现亮点，说完全就是系统api调用被怼一顿，然后让说了说职业规划。最后给的评价是从我的说话方式解决问题的思路和对大局的把控比较适合去做产品经理，但是程序员注重的是对细节的运用。最后问有什么想问的，面试官是百度云计算的经理，我也没啥能说的了就问了问前一阵鹿晗和关晓彤新闻把新浪服务器搞瘫痪了他怎么看，然后他给我讲了一堆听不懂但是觉得挺有意思，最后表示感谢之后就撤退了，也没看见面试单子上的结果，估计GG了，好一点也许会被扔进百度的备胎池，不抱啥希望。</p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">结尾<br/></h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">面试出来手机没费了，fuck，借了一个面试同学的手机给溪溪打电话，找到了在百度大厦外面忍着寒冷和脚丫子疼痛等了我一上午的溪溪（心疼溪溪一炮的时间），在经历了手机跳电罢工，出租车拒载，等一系列事件后，凭借溪溪手机个位数的电量扫开了俩共享单车，骑了两三公里到了烤鸭店一面恍惚一面美滋滋的吃了顿烤鸭，晃晃悠悠到火车站，回了济南。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">溪溪给我买了个小蛋糕，插上了一个“2”一个“4”的蜡烛，关灯，点燃，许愿，吹灭，看着蜡烛上冒起的一丝白烟，有意义的24岁生日......</p><p><br/></p>', '[]', 0),
(30, 1, 1, 1, 0, 0, 1530117929, 1530117929, NULL, 1530117905, 'PHP自己用到的系统函数', '', '', '', NULL, '<h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">文件类</h2><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">目录操作</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">opendir(目录路径);获得的是文件句柄，readdir（目录文件句柄），closedir（目录文件句柄）</p></li></ol><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;?php&nbsp;\n　　$base_dir&nbsp;=&nbsp;&quot;filelist/&quot;;&nbsp;\n　　$fso&nbsp;=&nbsp;opendir($base_dir);&nbsp;\n　　echo&nbsp;$base_dir.&quot;&lt;hr/&gt;&quot;&nbsp;;&nbsp;\n　　while($flist=readdir($fso)){&nbsp;\n　　echo&nbsp;$flist.&quot;&lt;br/&gt;&quot;&nbsp;;&nbsp;\n　　}&nbsp;\n　　closedir($fso)&nbsp;\n　　?&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;mkdir($path,0777) 创建目录，,0777是权限码,在非window下可用umask()函数设置.&nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;rmdir($path)&nbsp;将删除路径在$path的文件.&nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">&nbsp;&nbsp;&nbsp;&nbsp;2.文件操作</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;file_exists($file)文件是否存在<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;is_readable($file)文件是否存在且可读<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;is_writable(file)文件是否可写<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;filesize(file)获取文件大小<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;$data = file_get_contents($file);获取文件内容（低版本php不支持）可用以下代码读取</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$f&nbsp;=&nbsp;fopen($file,&nbsp;&#39;r&#39;);&nbsp;\n　　$data&nbsp;=&nbsp;fread($f,&nbsp;filesize($file));&nbsp;\n　　fclose($fso);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;file_put_contents ($file, $data); 写入内容（低版本php不支持）</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$f&nbsp;=&nbsp;fopen($file,&nbsp;&#39;w&#39;);&nbsp;\nfwrite($f,&nbsp;$data);&nbsp;\nfclose($f);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;&nbsp;&nbsp;@unlink($file)删除文件<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp; &nbsp; copy($file,$newfile);<br/></p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;?php&nbsp;\n$file&nbsp;=&nbsp;&#39;yang.txt&#39;;&nbsp;\n$newfile&nbsp;=&nbsp;&#39;ji.txt&#39;;&nbsp;#&nbsp;这个文件父文件夹必须能写&nbsp;\nif&nbsp;(file_exists($file)&nbsp;==&nbsp;false)&nbsp;{&nbsp;\ndie&nbsp;(&#39;无法复制&#39;);&nbsp;\n}&nbsp;\n$result&nbsp;=&nbsp;copy($file,&nbsp;$newfile);&nbsp;\nif&nbsp;($result&nbsp;==&nbsp;false)&nbsp;{&nbsp;\necho&nbsp;&#39;复制ok&#39;;&nbsp;\n}&nbsp;\n?&gt;</pre><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">字符串操作类</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">strpos(str,find,start); 在str中找到find字符串第一次出现的位置，start为可选参数用来，表示开始搜索的位置</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">strrpos(str,find,start);在str中找到find字符串最后一次出现的位置，start为可选参数用来，表示开始搜索的位置，（找不到返回false）（strripos功能一样只不过大小写不敏感）</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">strstr(str,flag);在str中找到flag字符串第一次出现的位置并返回从该位置之后的子串；</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">similar_text($text1,$text2,$per);比较文本相似度，返回的是文本相同的字节数，如果需要获取文本相似度的百分数，则将定义的变量传入第三个参数即可。</p><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">钩子相关</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">call_user_func_array(),动态调用函数<br/></p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">function&nbsp;sayEnglish($fName,&nbsp;$content)&nbsp;{&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;I&nbsp;am&nbsp;&#39;&nbsp;.&nbsp;$content;&nbsp;&nbsp;\n}&nbsp;&nbsp;\n&nbsp;&nbsp;\nfunction&nbsp;sayChinese($fName,&nbsp;$content,&nbsp;$country)&nbsp;{&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$content&nbsp;.&nbsp;$country;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;br&gt;&quot;;&nbsp;&nbsp;\n}&nbsp;&nbsp;\n&nbsp;&nbsp;\nfunction&nbsp;say()&nbsp;{&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;$args&nbsp;=&nbsp;func_get_args();&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;call_user_func_array($args[0],&nbsp;$args);&nbsp;&nbsp;\n}&nbsp;&nbsp;\n&nbsp;&nbsp;\nsay(&#39;sayChinese&#39;,&nbsp;&#39;我是&#39;,&nbsp;&#39;中国人&#39;);&nbsp;&nbsp;\nsay(&#39;sayEnglish&#39;,&nbsp;&#39;Chinese&#39;);\n\n\n\n//可调用类或对象的函数\nclass&nbsp;A&nbsp;{&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;sayChinese($fName,&nbsp;$content,&nbsp;$country)&nbsp;{&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;你好&#39;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\n&nbsp;}&nbsp;&nbsp;\n&nbsp;&nbsp;\n&nbsp;function&nbsp;say()&nbsp;{&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$args&nbsp;=&nbsp;func_get_args();&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;call_user_func_array(array(&#39;A&#39;,&nbsp;&#39;sayChinese&#39;),&nbsp;$args);&nbsp;&nbsp;\n&nbsp;}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">func_get_args()返回一个包含函数参数列表的数组</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">func_get_arg($number)根据序号返回相应参数</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">func_num_args()返回参数个数</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">is_callable()函数接收一个回调参数，可以指定一个函数名称或者一个包含方法名和对象的数组，如果在当前作用域中可以执行，就返回TRUE</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">method_exists($object， &#39;SomeMethod&#39;)检查方法是否存在(只是对我们提供的类或对象检查是否有我们所期望的方法，如果有，就返回TRUE，如果没有，就返回FALSE，这里并没有考虑可见性的问题。所以，当你恰好判断一个私有或者受保护的方法时，你能够得到一个正确的返回，但是执行的时候，会得到一个“Fatal Error”错误警告)</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">list()函数用于在一次操作中给一组变量赋值</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;?php\n$my_array&nbsp;=&nbsp;array(&quot;Dog&quot;,&quot;Cat&quot;,&quot;Horse&quot;);list($a,&nbsp;$b,&nbsp;$c)&nbsp;=&nbsp;$my_array;\necho&nbsp;&quot;I&nbsp;have&nbsp;several&nbsp;animals,&nbsp;a&nbsp;$a,&nbsp;a&nbsp;$b&nbsp;and&nbsp;a&nbsp;$c.&quot;;\n?&gt;</pre><p><br/></p>', '[]', 0);
INSERT INTO `lv_post` (`id`, `post_status`, `comment_status`, `user_id`, `is_top`, `is_recommend`, `create_time`, `update_time`, `delete_time`, `published_time`, `title`, `author`, `keywords`, `excerpt`, `source`, `content`, `more`, `template_id`) VALUES
(33, 1, 1, 1, 0, 0, 1530167839, 1530167839, NULL, 1530167815, 'JQUERY操作下拉列表', '', '', '', NULL, '<pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;select&nbsp;class=&quot;selector&quot;&gt;&lt;/select&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 14px; white-space: normal; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);">1、设置value为pxx的项选中</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$(&quot;.selector&quot;).val(&quot;pxx&quot;);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 14px; white-space: normal; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);">2、设置text为pxx的项选中</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$(&quot;.selector&quot;).find(&quot;option[text=&#39;pxx&#39;]&quot;).attr(&quot;selected&quot;,true);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 14px; white-space: normal; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);">3、获取当前选中项的value</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&nbsp;&nbsp;&nbsp;$(&quot;.selector&quot;).val();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 14px; white-space: normal; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);">4、获取当前选中项的text</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&nbsp;$(&quot;.selector&quot;).find(&quot;option:selected&quot;).text();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 14px; white-space: normal; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);">很多时候用到select的级联，即第二个select的值随着第一个select选中的值变化。这在jquery中是非常简单的。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; font-size: 14px; white-space: normal; padding: 0px; color: rgb(69, 69, 69); font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: rgb(255, 255, 255);">如：</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$(&quot;.selector1&quot;).change(function(){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;先清空第二个\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&quot;.selector2&quot;).empty();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;实际的应用中，这里的option一般都是用循环生成多个了\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;option&nbsp;=&nbsp;$(&quot;&lt;option&gt;&quot;).val(1).text(&quot;pxx&quot;);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&quot;.selector2&quot;).append(option);\n});</pre><p><br/></p>', '[]', 0),
(34, 1, 1, 1, 0, 0, 1530168106, 1530168263, NULL, 1530167905, '一个简单的CSS3特效按钮', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">前言<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">偶然看见有人在Android应用上用自定义控件的方式实现了个可爱的小按钮，看了一眼发现使用CSS3可以轻松实现。实现后效果如下图</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;"><img src="/upload/editor/image/20180628/1530168255625934.gif" alt="24154043232.gif"/></p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">手段<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); text-indent: 2em; line-height: 2em;">用两个div做两个圆形，未选中状态的圆形在上面，点击之后为选中状态的圆形动画变换，逐渐收缩半径，这样下面的圆会逐渐露出来，然后为下面的圆形同样也设置动画，不过会设置一个延迟，在上层圆形动画结束后开始下层圆形动画。对号使用span做的，选中后直接改变背景色即可。<br/></p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">代码<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><strong style="box-sizing: border-box;">HTML:</strong></p><pre class="brush:html;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;!DOCTYPE&nbsp;html&gt;\n&lt;html&gt;\n	&lt;head&gt;\n		&lt;meta&nbsp;charset=&quot;UTF-8&quot;&gt;\n		&lt;title&gt;&lt;/title&gt;\n		&lt;link&nbsp;rel=&quot;stylesheet&quot;&nbsp;type=&quot;text/css&quot;&nbsp;href=&quot;css/checkWidgetDemo.css&quot;/&gt;\n	&lt;/head&gt;\n	&lt;body&gt;\n		&lt;div&nbsp;class=&quot;main&quot;&gt;\n			&lt;div&nbsp;class=&quot;checkedCircle&nbsp;circle&quot;&gt;\n				\n			&lt;/div&gt;\n			&lt;div&nbsp;class=&quot;unCheckedCircle&nbsp;circle&quot;&gt;\n				\n			&lt;/div&gt;\n			&lt;span&nbsp;class=&quot;checkIconLeft&nbsp;checkIcon&quot;&gt;&lt;/span&gt;\n			&lt;span&nbsp;class=&quot;checkIconRight&nbsp;checkIcon&quot;&gt;&lt;/span&gt;\n		&lt;/div&gt;\n	&lt;/body&gt;\n	&lt;script&nbsp;src=&quot;js/jquery-1.11.1.min.js&quot;&nbsp;type=&quot;text/javascript&quot;&nbsp;charset=&quot;utf-8&quot;&gt;&lt;/script&gt;\n	&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;\n		$(&#39;.main&#39;).click(function(){\n			$(this).toggleClass(&#39;check&#39;);\n		});\n	&lt;/script&gt;\n&lt;/html&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><strong style="box-sizing: border-box;">CSS:</strong></p><pre class="brush:css;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">.main{\n	text-align:&nbsp;center;\n	margin:&nbsp;0&nbsp;auto;\n	position:&nbsp;relative;\n	width:&nbsp;200px;\n	height:&nbsp;200px;\n}\n.circle{\n	position:&nbsp;absolute;\n	left:&nbsp;50%;\n	top:&nbsp;50%;\n	transform:&nbsp;translate(-50%,-50%);\n	width:80%;\n	height:&nbsp;80%;\n	border-radius:&nbsp;50%;\n}\n.checkedCircle{\n	background:&nbsp;#FD6A7F;\n}\n.unCheckedCircle{\n	background:&nbsp;#EAEAEA;\n}\n.checkIcon{\n	position:&nbsp;absolute;\n	display:&nbsp;inline-block;\n	background:&nbsp;white;\n	height:&nbsp;4%;\n	z-index:&nbsp;2;\n}\n.checkIconLeft{\n	left:&nbsp;20%;\n	top:&nbsp;50%;\n	transform:&nbsp;translateY(-50%)&nbsp;rotate(45deg);\n	width:&nbsp;30%;\n}\n.checkIconRight{\n	top:&nbsp;42%;\n	right:&nbsp;18%;\n	transform:&nbsp;rotate(-45deg);\n	width:&nbsp;45%;\n}\n.check&nbsp;.unCheckedCircle{\n	animation:&nbsp;check&nbsp;.5s&nbsp;linear;\n	animation-fill-mode:&nbsp;forwards;\n}\n.check&nbsp;.checkedCircle{\n	animation:&nbsp;scale&nbsp;.25s&nbsp;linear;\n	animation-delay:&nbsp;.5s;\n	animation-fill-mode:&nbsp;forwards;\n}\n.check&nbsp;.checkIcon{\n	transition:&nbsp;all&nbsp;.25s&nbsp;linear;\n	transition-delay:&nbsp;.5s;\n	background:&nbsp;#FFEE58;\n}\n@keyframes&nbsp;check{\n	from{\n		width:&nbsp;80%;\n		height:&nbsp;80%;\n	}\n	to{\n		width:&nbsp;0%;\n		height:&nbsp;0%;\n	}\n}\n@keyframes&nbsp;scale{\n	0%{\n		width:&nbsp;80%;\n		height:&nbsp;80%;\n	}\n	50%{\n		width:&nbsp;90%;\n		height:&nbsp;90%;\n	}\n	100%{\n		width:&nbsp;80%;\n		height:&nbsp;80%;\n	}\n}</pre><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">结尾<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">工作安定了，一份比较理想的工作，坐等体检了。九月开的学，十月下旬就找到满意的工作也算是比较顺利了，剩下的一些面试可以全程放飞自我的去突突了，毕业后就算是彻底跟学生阶段告别了，不过研究生三年毕竟没白上，心理上已经安稳，没有任何不适，回过头看看自己的学的，还是垃圾的一比，希望能趁毕业前把根基打牢固，朝着全栈完全体继续努力。</p><p><br/></p>', '[]', 0),
(35, 1, 1, 1, 0, 0, 1530168332, 1530168332, NULL, 1530168312, 'JS的基本类型与TYPEOF', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">JS的基本数据类型<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">undefined string number boolean object<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">前四种为基本数据类型，第五种为引用数据类型。</p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">undefined null NaN的区别<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">undefined为变量为定义属于基本数据类型的一种，null是一种特殊的object类型，NaN是一种特殊的number类型。<br/></p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">var&nbsp;a1;\nvar&nbsp;a2&nbsp;=&nbsp;true;\nvar&nbsp;a3&nbsp;=&nbsp;1;\nvar&nbsp;a4&nbsp;=&nbsp;&quot;Hello&quot;;\nvar&nbsp;a5&nbsp;=&nbsp;new&nbsp;Object();\nvar&nbsp;a6&nbsp;=&nbsp;null;\nvar&nbsp;a7&nbsp;=&nbsp;NaN;\nvar&nbsp;a8&nbsp;=&nbsp;undefined;\nalert(typeof&nbsp;a);&nbsp;&nbsp;&nbsp;&nbsp;//显示&quot;undefined&quot;\nalert(typeof&nbsp;a1);&nbsp;//显示&quot;undefined&quot;\nalert(typeof&nbsp;a2);&nbsp;//显示&quot;boolean&quot;\nalert(typeof&nbsp;a3);&nbsp;//显示&quot;number&quot;\nalert(typeof&nbsp;a4);&nbsp;//显示&quot;string&quot;\nalert(typeof&nbsp;a5);&nbsp;//显示&quot;object&quot;\nalert(typeof&nbsp;a6);&nbsp;//显示&quot;object&quot;\nalert(typeof&nbsp;a7);&nbsp;//显示&quot;number&quot;\nalert(typeof&nbsp;a8);&nbsp;//显示&quot;undefined&quot;</pre><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">typeof<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">判断变量是否为undefined需要使用typeof，typeof返回的结果为字符串，有六种结果分别是，undefined boolean number string object function.</p><p><br/></p>', '[]', 0),
(36, 1, 1, 1, 0, 0, 1530168453, 1530168453, NULL, 1530168425, 'KINDLE杂货铺项目中遇见的坑', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">PHP服务端(ThinkPHP5)</h1><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">报Cannot use object of type stdClass as array错误，查找原因发现是在生成 token的时候将token作为键，Json encode后的用户信息（用户信息为一个关联数组）作为值，在取得时候decode获取到的是对象而不是关联数组，因此解决方法有两个，第一个是json_decode($val,true);将json_decode的第二个参数设为true从而解码出来的是关联数组，第二种方法，既然获取到的是对象，那就用对象的方式获取信息，</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">$info=json_decode($val);<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">$info-&gt;person_name;</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">验证器一直通不过，查半天发现是因为多了个空格&nbsp;</p></li></ol><pre style="box-sizing: border-box; overflow: auto; font-family: Menlo; font-size: 12pt; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(169, 183, 198); background-color: rgb(43, 43, 43); border: 1px solid rgb(204, 204, 204); border-radius: 4px;"><span style="box-sizing: border-box; color: #CC7832; background-color: #232525; font-weight: bold;">protected </span><span style="box-sizing: border-box; color: #9876AA; background-color: #232525;">$rule</span><span style="box-sizing: border-box; background-color: #232525;">=[<br/></span><span style="box-sizing: border-box; background-color: #232525;"> &nbsp; &nbsp;[</span><span style="box-sizing: border-box; color: #6A8759; background-color: #232525;">&#39;id&#39;</span><span style="box-sizing: border-box; color: #CC7832; background-color: #232525;">,</span><span style="box-sizing: border-box; color: #6A8759; background-color: #232525;">&#39;require|PositiveInt&#39;</span><span style="box-sizing: border-box; background-color: #232525;">]<br/></span><span style="box-sizing: border-box; background-color: #232525;">]</span><span style="box-sizing: border-box; color: #CC7832; background-color: #232525;">;<br/><br/>下面为bug写法，这样会导致验证起一直不通过<br/>protected $rule=[<br/> &nbsp; &nbsp;[&#39;id&#39;,&#39;require | PositiveInt&#39;]<br/>];<br/></span></pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp;&nbsp;3.模型中进行数据关联的方法（一对一、一对多、多对多）必须用public修饰，否则调用不到</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">&nbsp; 4.多对多方法</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;"><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">public function post(){<br/> &nbsp; &nbsp; &nbsp; &nbsp;return $this-&gt;belongsToMany(&#39;PostModel&#39;,&#39;category_and_post&#39;,&#39;post_id&#39;,&#39;category_id&#39;);<br/> &nbsp; &nbsp;}<br/></p></pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">含义：需要关联起来的模型，中间表明（不用加前缀），中间表中表示需要关联的模型的主键的列名，中间表中表示当前模型的主键的列名。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">5.集成UEditor</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">（1）将UEditor整个文件夹放到static目录下<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">（2）在UEditor文件夹中的ueditor.config.js中的URL修改为UEditor文件夹所在路径（/static/ueditor/）</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">（3）在UEditor文件夹中的php文件夹中找到config.json修改各类文件的上传配置项，主要是修改上传后保存的路径，在项目中修改为统一的上传路径&nbsp;&quot;imagePathFormat&quot;: &quot;/uploads/{yyyy}{mm}{dd}/{time}{rand:6}&quot;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">（4）在需要使用编辑器的页面，首先引入UEditor的js文件，然后在html中给编辑器一个区域，最后通过js对编辑器进行初始化，获取实例，进行使用。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">（5）setContent无效的问题，是因为编辑器还没创建好，监听一下编辑器的事件</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">editor.addListener(&#39;ready&#39;,function(){\n&nbsp;&nbsp;&nbsp;&nbsp;editor.setContent();\n});</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">ps：网上下的Ueditor源码有些问题，手动改或者去github上下载。</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">//引入\n&lt;script&nbsp;type=&quot;text/javascript&quot;&nbsp;src=&quot;/static/ueditor/ueditor.config.js&quot;&gt;&lt;/script&gt;\n&lt;script&nbsp;type=&quot;text/javascript&quot;&nbsp;src=&quot;/static/ueditor/ueditor.all.js&quot;&gt;&lt;/script&gt;\n\n//区域\n&nbsp;&lt;div&nbsp;class=&quot;layui-input-block&quot;&gt;\n&nbsp;&nbsp;&nbsp;&lt;script&nbsp;id=&quot;container&quot;&nbsp;name=&quot;categoryDesc&quot;&nbsp;type=&quot;text/plain&quot;&gt;\n\n&nbsp;&nbsp;&nbsp;&lt;/script&gt;\n&nbsp;&lt;/div&gt;\n&nbsp;\n//js初始化\nvar&nbsp;editor=UE.getEditor(&#39;container&#39;,{initialFrameWidth:900,initialFrameHeight:400,});\nvar&nbsp;content=editor.getContent();//获取编辑器内容\neditor.setContent(content);//设置编辑器内容</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">6.PHP获取数组交集、差集</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;"><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">交集<br/>array_intersect(array1,array2....)<br/>$fruit1&nbsp;=&nbsp;array(&quot;Apple&quot;,&quot;Banana&quot;,&quot;Orange&quot;);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;$fruit2&nbsp;=&nbsp;array(&quot;Pear&quot;,&quot;Apple&quot;,&quot;Grape&quot;);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;$fruit3&nbsp;=&nbsp;array(&quot;Watermelon&quot;,&quot;Orange&quot;,&quot;Apple&quot;);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;$intersection&nbsp;=&nbsp;array_intersect($fruit1,&nbsp;$fruit2,&nbsp;$fruit3);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;print_r($intersection);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;output&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Array&nbsp;(&nbsp;[0]&nbsp;=&gt;&nbsp;Apple&nbsp;)&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;<br/>差集<br/>array_diff(array1,array2)//获取到的是array1内有但是array2内没有的元素集合，即array1-array2<br/>$fruit1&nbsp;=&nbsp;array(&quot;Apple&quot;,&quot;Banana&quot;,&quot;Orange&quot;);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;$fruit2&nbsp;=&nbsp;array(&quot;Pear&quot;,&quot;Apple&quot;,&quot;Grape&quot;);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;$fruit3&nbsp;=&nbsp;array(&quot;Watermelon&quot;,&quot;Orange&quot;,&quot;Apple&quot;);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;$intersection&nbsp;=&nbsp;array_diff($fruit1,&nbsp;$fruit2,&nbsp;$fruit3);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;print_r($intersection);&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;output&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Array&nbsp;(&nbsp;[1]&nbsp;=&gt;&nbsp;Banana&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;衍生<br/>&nbsp;&nbsp;&nbsp;&nbsp;关联数组的交集&nbsp;array_intersect_assoc()<br/>&nbsp;&nbsp;&nbsp;&nbsp;关联数组的差集&nbsp;array_diff_assoc()<br/></p></pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">7.本地使用phpmailer发送邮件没有问题，部署到服务器后发送不出去邮件</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">两步解决</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">（1）检查服务器php环境中的相应扩展是否打开把<strong style="box-sizing: border-box;">php.ini</strong>的<strong style="box-sizing: border-box;">extension=php_openssl.dll</strong>扩展打开</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">（2）由于安全原因fsockopen 和pfsockopen 经常被服务器端关闭，即phpmainler中用来获取邮箱连接的函数，因此需要稍微改动下phpmailer源码</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;"><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">在phpmailer下的class.stmp.php文件中找到<br/><br/> &nbsp; &nbsp;// connect to the smtp server<br/> &nbsp; &nbsp;$this-&gt;smtp_conn = @fsockopen($host, &nbsp; &nbsp;// the host of the server<br/> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $port, &nbsp; &nbsp;// the port to use<br/> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $errno, &nbsp; // error number if any<br/> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $errstr, &nbsp;// error message if any<br/> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $timeout); &nbsp; // give up after ? secs<br/><br/>这一段代码，将其改为<br/> &nbsp; &nbsp;// connect to the smtp server<br/> &nbsp; &nbsp;$this-&gt;smtp_conn = @stream_socket_client($host.&#39;:&#39;.$port, &nbsp; &nbsp;// the host of the server<br/> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $errno, &nbsp; // error number if any<br/> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $errstr, &nbsp;// error message if any<br/> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $timeout); &nbsp; // give up after ? secs<br/></p></pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">8.php数组元素删除问题，使用unset与array_splice都可以进行数组元素删除，二者进行删除都需要数组元素的索引，不同的是，unset删除元素后不会重置索引，array_splice会重置索引其用法同JS中的splice函数类似</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;?php$tmp&nbsp;=&nbsp;&#39;324&#39;;\n$arr&nbsp;=&nbsp;array(&#39;0&#39;&nbsp;=&gt;&nbsp;&#39;321&#39;,&#39;\n1&#39;&nbsp;=&gt;&nbsp;&#39;322&#39;,\n&#39;2&#39;&nbsp;=&gt;&nbsp;&#39;323&#39;,\n&#39;3&#39;&nbsp;=&gt;&nbsp;&#39;324&#39;,\n&#39;4&#39;&nbsp;=&gt;&nbsp;&#39;325&#39;,\n&#39;5&#39;&nbsp;=&gt;&nbsp;&#39;326&#39;,\n);\nforeach(&nbsp;$arr&nbsp;as&nbsp;$k=&gt;$v)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\nif($tmp&nbsp;==&nbsp;$v)&nbsp;\nunset($arr[$k]);\n}\nprint_r($arr);?&gt;\n\nArray(\n&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;321\n&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;322\n&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;323\n&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;325\n&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;326)</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em;">这样会出现一个问题，再循环的时候不能使用array_splice进行删除，因为重置了索引，循环会混乱，这样只能使用unset在循环中删除，在循环删除后使用array_values或者array_merge处理一下即可重置索引。<br/></p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 2em; white-space: normal; background-color: rgb(245, 245, 245);">JS<br/></h1><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">判断变量是否为undefined</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">typeof(val)==&#39;undefined&#39;</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">设置单选框状态 $(&quot;input[name=&#39;category_show&#39;][value=&#39;0&#39;]&quot;).prop(&#39;checked&#39;,&#39;checked&#39;)</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">判断元素是否在数组里 $.inArray(元素，数组)找到则返回索引，否则返回－1，或者在Array原型中添加方法Array.prototype.contain=function(item){ &nbsp;遍历数组查找 }; 用法 数组.contain(元素);</p></li></ol><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">微信小程序</h1><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">选取图片上传（原来还可以选文件，现在不大行了）</p></li></ol><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;"><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; line-height: 2em;">wx.chooseImage({<br/> &nbsp;success: function(res) { &nbsp; &nbsp;<br/> &nbsp;var tempFilePaths = res.tempFilePaths<br/> &nbsp; &nbsp;wx.uploadFile({<br/> &nbsp; &nbsp; &nbsp;url: &#39;https://example.weixin.qq.com/upload&#39;, //仅为示例，非真实的接口地址<br/> &nbsp; &nbsp; &nbsp;filePath: tempFilePaths[0],<br/> &nbsp; &nbsp; &nbsp;name: &#39;file&#39;,<br/> &nbsp; &nbsp; &nbsp;formData:{ &nbsp; &nbsp; &nbsp; &nbsp;<br/> &nbsp; &nbsp; &nbsp;&#39;user&#39;: &#39;test&#39;<br/> &nbsp; &nbsp; &nbsp;},<br/> &nbsp; &nbsp; &nbsp;success: function(res){ &nbsp; &nbsp; &nbsp; &nbsp;<br/> &nbsp; &nbsp; &nbsp;var data = res.data &nbsp; &nbsp; &nbsp; &nbsp;//do something<br/> &nbsp; &nbsp; &nbsp;}<br/> &nbsp; &nbsp;})<br/> &nbsp;}<br/>})<br/></p></pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">2.wx.request一直报500，别的接口都没问题，只有发送书籍的接口报500，这里是微信的一个小坑，在使用wx.request配置参数的时候一定要遵循 url method header data的顺序配置，否则就可能报500，实在不行把method去掉试试，还有就是可以在app.js里配置下请求超时的时间，自己的服务器带宽很小，还需要发送邮件比较慢请求可能会超时。</p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">Android</h1><p><br/></p>', '[]', 0),
(37, 1, 1, 1, 0, 0, 1530169209, 1530169209, NULL, 1530168670, '第一次GETSHELL了一个网站（最后一步gg了）', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">前言<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">昨天整跟溪溪在网吧Dota的时候，淘宝上来了个活，需要仿做一个公众号，我点开看了看是个游戏代练平台，随便点了几下，发现业务逻辑也就那样，当时正拿黑鸟杀的起劲，就随口报价三千，谁知那人惊呼太便宜了，说问了好几家都一万＋，哎，又因为没好好定价好像要错失一单，不过那人倒是说会把店铺收藏，说不定过几天有转机，不过无所谓了。打完Dota准备回去嘿嘿嘿的路上随手想看看刚才那个公众号的业务逻辑，点开之后把玩了一下，没发现啥亮点，随手右上角点了一下在safari中打开，弹出来的结果顿时让我来了兴趣。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;"><img src="/upload/editor/image/20180628/1530168890806734.jpeg" alt="31103053349.jpeg" width="685" height="1287"/></p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 2em; text-indent: 0em; white-space: normal; background-color: rgb(245, 245, 245);">分析<br/></h1><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">这页面太熟悉了，明显实用的是ThinkPHP框架，且调试模式没关，也就是app_debug还设为true</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">观察URL发现，没有利用ThinkPHP的路由功能，依旧实用的是 模块／控制器／方法 链接模式</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">服务器信息，用的是Apache服务器，网站在服务器上路径一目了然（最后这点没有用上）</p></li></ol><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">巧合<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">本着程序员都是大懒比和试试看的心态，把URL的控制器改为admin，回车，bingo，一击命中。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><img src="/upload/editor/image/20180628/1530168973955330.png" alt="31104154760.png"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); text-indent: 2em; line-height: 2em;">本着程序员思维（图省事思维），用户名打上admin，密码打上123456789，填上验证码，回车，没进去，密码改成admin回车，哎卧槽，直接干进后台了。（getshell后闲着没事搜了一下，发现这个前端用的是layer框架layui，果然是个传统的程序员哈哈哈，ps：看了看准备下次也用用layer ui 怀旧一下）</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); text-indent: 2em; line-height: 2em;"><img src="/upload/editor/image/20180628/1530169043664565.png" alt="31104431500.png" width="859" height="447"/></p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">到处找洞<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">后台菜单逛一遍，顺便在用户管理里面把我和溪溪的注册信息删掉了（6的一批），想了想，毕竟是传统的程序员，那就用传统的一句话木马来整就行辣，毕竟我也只了解一句话木马。<br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">找到内容管理－文章管理，编辑文章，发现没有上传附件的功能，fuck，只有上传图片的功能。图片如果想要在前端显示出来的话，图片肯定需要在public文件夹下，也就是通过URL可以直接访问的，上传的图片也肯定是在public下没跑了，但是在哪个文件夹不一定。直接在图片处上传php文件不行，把一句话的php文件改成jpg不行，上传不上，应该是配置了验证器，打开浏览器调试，重新上传一张正常的图片，发现调用了/api/upload/upload接口进行图片上传，打开Postman，抱着试试看的心态，填写API接口连接，请求方式改为post，填写请求体，分别上传一个<span style="box-sizing: border-box; text-indent: 32px;">空请求体和</span>一个正常图片文件，结果如下：<br/><img src="/upload/editor/image/20180628/1530169166537288.png" alt="31112428156.png"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 0em;"><img src="/upload/editor/image/20180628/1530169185469454.png" alt="31112612582.png"/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">通过这两张图可以确定上传文件的文件名与存放路径，存放在public下的uploads文件夹下按日期确定目录，服务器端文件名会在调用接口后返回。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">至此，洞已经找好了，就差马了。</p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 2em; text-indent: 0em; white-space: normal; background-color: rgb(245, 245, 245);">上马（后经验证没上成）<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">由于上传图片在服务端有后缀名验证，因此直接上传php文件的马肯定是不行的，印象中应该有图片马，百度一发果然有，利用cmd的copy命令将php文件与图片文件合并，合并成新的图片文件，新的图片文件能正常打开，但是一句话马已经插入进去了。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">马做好了，但毕竟还是图片，不会被解析执行，需要利用include漏洞，在任意php文件中include这个图片，这个图片就会作为php代码include进来，一句话也就得以解析执行，想起了看的文章，好像是ThinkPHP的缓存机制是有漏洞的，再看看后台有个站点配置的目录，配置一些站点信息，版权信息和SEO信息啥的，心里思考一下流程，因为这些信息配之后肯定是会自动的加到每个页面上面，因此这些信息应该是会存在数据库中，然后在访问每个页面的时候进行调用，而这时候，从数据库将信息读出来，应该是处于页面正在解析的阶段，应该也会将include这个语句解析，试一试，将<span style="box-sizing: border-box; color: #444444; font-family: &quot;Microsoft yahei&quot;, 微软雅黑, Arial, Helvetica, sans-serif, 宋体; background-color: #FFFFFF;">&lt;% #include files=&quot;2.jpg&quot;%&gt;</span>填入到站点版权信息框，用菜刀连一下，成功连接，完成getShell。</p><p><br/></p>', '[]', 0);
INSERT INTO `lv_post` (`id`, `post_status`, `comment_status`, `user_id`, `is_top`, `is_recommend`, `create_time`, `update_time`, `delete_time`, `published_time`, `title`, `author`, `keywords`, `excerpt`, `source`, `content`, `more`, `template_id`) VALUES
(38, 1, 1, 1, 0, 0, 1530180480, 1530180480, NULL, 1530180461, 'THINKCMF5模板制作与坑', '', '', '', NULL, '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">文章列表</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;portal:articles&nbsp;item=&quot;vo&quot;&nbsp;where=&quot;$where&quot;&nbsp;limit=&quot;2&quot;&nbsp;&nbsp;relation=&quot;categories&quot;&nbsp;categoryIds=&quot;10&quot;&nbsp;order=&quot;post.create_time&nbsp;DESC&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;{:cmf_url(&#39;portal/Article/index&#39;,array(&#39;id&#39;=&gt;$vo.id,&#39;cid&#39;=&gt;$vo.category_id))}&quot;&nbsp;class=&quot;hvr-bounce-in&quot;&gt;\n	&lt;img&nbsp;src=&quot;{:cmf_get_image_url($vo.more.thumbnail)}&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/a&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;{$vo.post_title}//标题\n&nbsp;&nbsp;&nbsp;&nbsp;{$vo.post_excerpt}//摘要\n&nbsp;&nbsp;&nbsp;&nbsp;{:date(&#39;Y-m-d&#39;,$vo.published_time)}//发布时间\n&nbsp;&nbsp;&nbsp;&nbsp;{$vo.post.category_id}//栏目id\n&nbsp;&nbsp;&nbsp;&nbsp;{$vo.user.user_nickname}//作者\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;javascript:;&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;i&nbsp;class=&quot;fa&nbsp;fa-eye&quot;&gt;&lt;/i&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;{$vo.post_hits}&lt;/span&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/a&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;{:url(&#39;portal/Article/doLike&#39;,array(&#39;id&#39;=&gt;$vo[&#39;id&#39;]))}&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;{:url(&#39;user/Favorite/add&#39;,array(&#39;id&#39;=&gt;$vo[&#39;id&#39;]))}&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class=&quot;js-favorite-btn&quot;&nbsp;data-title=&quot;{$vo.post_title}&quot;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data-url=&quot;{:cmf_url(&#39;portal/Article/index&#39;,array(&#39;id&#39;=&gt;$vo[&#39;id&#39;],&#39;cid&#39;=&gt;$category[&#39;id&#39;]))}&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;i&nbsp;class=&quot;fa&nbsp;fa-star-o&quot;&gt;&lt;/i&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/a&gt;\n&lt;/portal:articles&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">在其他页面获取单页</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;php&gt;\n	$id=&#39;33&#39;;&nbsp;\n	$page=app\\portal\\service\\ApiService::page($id);\n&lt;/php&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">获取幻灯片</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;slides&nbsp;id=&quot;4&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;\n	&lt;a&nbsp;href=&quot;{$vo.url}&quot;&nbsp;target=&#39;_blank&#39;&gt;&lt;img&nbsp;src=&quot;{:cmf_get_image_url($vo.image)}&quot;&nbsp;alt=&quot;&quot;&nbsp;/&gt;&lt;/a&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;\n&lt;/slides&gt;\n//其它方式\n&lt;php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;$slide=app\\admin\\service\\ApiService::slides(&#39;2&#39;);\n&lt;/php&gt;\n&lt;volist&nbsp;name=&#39;slide&#39;&nbsp;id=&#39;vo&#39;&gt;\n	&lt;li&gt;\n	&lt;a&gt;&lt;img&nbsp;src=&quot;{:cmf_get_image_url($vo.image)}&quot;&gt;&lt;/a&gt;\n	&lt;/li&gt;\n&lt;/volist&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">获取栏目链接</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">{:cmf_url(&#39;portal/List/index&#39;,array(&#39;id&#39;=&gt;&#39;栏目id&#39;))}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">使用傻瓜模版配置图片后获取</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;img&nbsp;src=&quot;__WEB_ROOT__/upload/{$theme_vars.web_icon}&quot;/&gt;\n\n//比如后台设置角标\n&lt;link&nbsp;rel=&quot;icon&quot;&nbsp;href=&quot;__WEB_ROOT__/upload/{$theme_vars.web_icon}&quot;&nbsp;type=&quot;image/x-icon&quot;/&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">单页模版数据对象为</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">{$page}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">内容模版数据对象为</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">｛$article｝</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">在内容页中获取上一篇下一篇</p><pre class="brush:html;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">{$prev_article}&nbsp;{$next_article}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">在内容页内想获取当前栏目数据对象也很简单，已经封装好了category对象,源码在(portal/ArticleController/index)</p><pre class="brush:html;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">{$category}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">在列表也内通过提供的标签的方式不能获取非当前栏目的栏目文章列表，解决方法如下</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;$video_category_id=&#39;17&#39;;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;$where=[&nbsp;&#39;post.create_time&#39;=&gt;[&#39;egt&#39;,0]&nbsp;];&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;$param=[&nbsp;&#39;category_ids&#39;=&gt;$video_category_id,&nbsp;&#39;where&#39;=&gt;$where&nbsp;];&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;//注意这里，方法返回的结果还包含了其他一些信息，比如分页信息啥的，获取的文章在articles里需要注意\n&nbsp;&nbsp;&nbsp;&nbsp;$video_list=&nbsp;app\\portal\\service\\ApiService::articles($param)[&#39;articles&#39;];\n&lt;/php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;volist&nbsp;name=&#39;video_list&#39;&nbsp;id=&#39;vitem&#39;&gt;\n	&lt;li&gt;\n	&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;{:cmf_url(&#39;portal/Article/index&#39;,array(&#39;id&#39;=&gt;vitem.id,&#39;cid&#39;=&gt;&#39;vitem.category_id&#39;))}&quot;&nbsp;class=&quot;imgbox&quot;&gt;\n		&lt;img&nbsp;src=&quot;{:cmf_get_image_url($vitem.more.thumbnail)}&quot;&gt;\n		&lt;b&gt;&lt;/b&gt;\n	&nbsp;&nbsp;&nbsp;&nbsp;&lt;/a&gt;\n	&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;class=&quot;tips&quot;&gt;{$vitem.post_title}&lt;/a&gt;\n	&lt;/li&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/volist&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">提示为定义变量vo有可能是因为标签没有闭合</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">循环获取文章列表时候顺手处理下关键字</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;$keyword=explode(&#39;,&#39;,$vo[&#39;post_keywords&#39;]);\n&lt;/php&gt;\n&lt;volist&nbsp;name=&#39;keyword&#39;&nbsp;id=&#39;keyitem&#39;&gt;\n&lt;li&gt;{$keyitem}&lt;/li&gt;\n&lt;/volist&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">处理下title</p><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;$title=$site_info[&#39;site_name&#39;];&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;if(isset($article)){&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$title=$article[&#39;post_title&#39;].&#39;-&#39;.$title;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(isset($category)){\n	$title=$category[&#39;name&#39;].&#39;-&#39;.$title;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(isset($page)){\n	$title=$page[&#39;post_title&#39;].&#39;-&#39;.$title;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&lt;/php&gt;\n&lt;title&gt;{$title}&lt;/title&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">在php标签内写代码时候就是原生php代码，获取各种属性的时候是通过关联数组获取的而不是通过‘.’这个需要注意</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">嵌套循环的坑</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">在进行嵌套循环时候volist的name与id不能重复，否则可能会造成数据拦截等一系列的bug，当在外层循环用到索引的时候，内层循环需要把key属性即索引属性也重新定义一下，否则会影响到外层索引的判断</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">自定义的一个子导航组件</p><pre class="brush:php;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">配置文件：\n&quot;more&quot;:&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;widgets&quot;:{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;subNav&quot;:&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;title&quot;:&nbsp;&quot;关于协会页面子导航&quot;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;display&quot;:&nbsp;&quot;1&quot;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;vars&quot;:&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;page_ids&quot;:&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;title&quot;:&nbsp;&quot;页面ID&quot;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;value&quot;:&nbsp;&quot;&quot;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;type&quot;:&nbsp;&quot;text&quot;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;dataSource&quot;:&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;api&quot;:&nbsp;&quot;portal/page/index&quot;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;multi&quot;:&nbsp;true\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;placeholder&quot;:&nbsp;&quot;请选择页面&quot;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;tip&quot;:&nbsp;&quot;&quot;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;rule&quot;:&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;require&quot;:&nbsp;true\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;}\n模版：\n&lt;widget&nbsp;name=&quot;subNav&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$page_ids=explode(&#39;,&#39;,$widget[&#39;vars&#39;][&#39;page_ids&#39;]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&nbsp;class=&quot;menulist&nbsp;clearfix&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	&lt;volist&nbsp;name=&quot;page_ids&quot;&nbsp;id=&quot;vo&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&lt;eq&nbsp;name=&quot;vo&quot;&nbsp;value=&quot;$page.id&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;li&nbsp;class=&quot;cli&nbsp;mycl&quot;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;a&nbsp;href=&quot;{:cmf_url(&#39;portal/Page/index&#39;,array(&#39;id&#39;=&gt;$vo))}&quot;&gt;&lt;i&gt;&lt;/i&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			$temp=app\\portal\\service\\ApiService::page($vo);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;			echo&nbsp;$temp[&#39;post_title&#39;];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/a&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/li&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&lt;else/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;li&nbsp;class=&quot;cli&quot;&gt;&lt;a&nbsp;href=&quot;{:cmf_url(&#39;portal/Page/index&#39;,array(&#39;id&#39;=&gt;$vo))}&quot;&gt;&lt;i&gt;&lt;/i&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&nbsp;&nbsp;&nbsp;&nbsp;$temp=app\\portal\\service\\ApiService::page($vo);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$temp[&#39;post_title&#39;];\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/php&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/a&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;		&lt;/li&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&lt;/eq&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	&lt;/volist&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;\n&lt;/widget&gt;</pre><p><br/></p>', '[]', 0),
(39, 1, 1, 1, 0, 0, 1530180548, 1530180548, NULL, 1530180532, 'VUE学习笔记', '', '', '', NULL, '<ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">单文件组件中&lt;template&gt;标签下只允许有一个根节点</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">使用vue时候 根节点id不能绑定到body上，只能&lt;div id=&#39;app&#39;&gt;&lt;/div&gt;</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">消除首次加载闪屏 使用v-cloak指令</p></li></ol><pre class="brush:css;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&nbsp;&lt;style&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[v-cloak]&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;display:&nbsp;none;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&lt;/style&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;id=&quot;app&quot;&nbsp;v-cloak&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">4.删除表格中一行<br/></p><pre class="brush:cpp;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;div&nbsp;id=&quot;app&quot;&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&nbsp;v-for=&quot;(todo,index)&nbsp;in&nbsp;todos&quot;&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;span&gt;{{&nbsp;todo.text&nbsp;}}&lt;/span&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button&nbsp;@click=&quot;removeTodo(index)&quot;&gt;X&lt;/button&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&lt;/div&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">5.获取路由参数用this.<span style="box-sizing: border-box; color: #FF0000;">$route</span>.键名，跳转的时候用this.<span style="box-sizing: border-box; color: #FF0000;">$router</span>.push({</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">path:&#39;/address?orderId=.....&#39;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">})</p><p><br/></p>', '[]', 0),
(40, 1, 1, 1, 0, 0, 1530180604, 1530180604, NULL, 1530180593, 'JQUERY基本点记录', '', '', '', NULL, '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">1.使用文档碎片添加dom</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">var&nbsp;frag&nbsp;=&nbsp;document.createDocumentFragment();&nbsp;//&nbsp;创建文档碎片&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;$.each(aArray,&nbsp;function(i,&nbsp;item)&nbsp;{&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;newListItem&nbsp;=&nbsp;&#39;&lt;li&gt;&#39;&nbsp;+&nbsp;item&nbsp;+&nbsp;&#39;&lt;/li&gt;&#39;;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frag.appendChild(newListItem);&nbsp;//&nbsp;这里不会刷新DOM&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;});</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">2.jQuery对象与DOM对象互相转换<br/></p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">DOM对象转成jQuery对象:&nbsp;\n\n$(&#39;dom对象&#39;)\n$(&#39;html代码&#39;)\n\njQuery对象转DOM对象\n\n$(&#39;div&#39;).get(0)\n$(&#39;div&#39;)[0]\n$(&#39;div&#39;)eq(0)[0]\n$(&#39;div&#39;).html()//直接获取html代码</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">3.获取最后一个元素</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">$(&#39;p:last&#39;)</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">4.</p><p><br/></p>', '[]', 0),
(41, 1, 1, 1, 0, 0, 1530190458, 1530190458, NULL, 1530190434, 'EDUSOHO看看咋用', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">安装</h1><ol class=" list-paddingleft-2" style="box-sizing: border-box; margin-bottom: 10px; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">下载下来解压出来</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">配置apache</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em;">vhosts.conf</p></li></ol><pre class="brush:as3;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;VirtualHost&nbsp;*:80&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;ServerName&nbsp;edu.com\n&nbsp;&nbsp;&nbsp;&nbsp;ServerAlias&nbsp;www.edu.com\n\n&nbsp;&nbsp;&nbsp;&nbsp;DocumentRoot&nbsp;P:/edusoho/web\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;Directory&nbsp;P:/edusoho/web&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;enable&nbsp;the&nbsp;.htaccess&nbsp;rewrites\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AllowOverride&nbsp;All\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Require&nbsp;all&nbsp;granted&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Directory&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;ErrorLog&nbsp;P:/edusoho/project_error.log\n&nbsp;&nbsp;&nbsp;&nbsp;CustomLog&nbsp;P:/edusoho/project_access.log&nbsp;combined\n&lt;/VirtualHost&gt;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">3.报时区错误</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">php.ini中设置date.timezone的值为PRC，设置好以后的为：date.timezone=PRC，同时取消这一行代码的注释，即去掉前面的分号就可以</p><p><br/></p>', '[]', 0),
(42, 1, 1, 1, 0, 0, 1530190579, 1530190579, NULL, 1530190527, 'PHP JSON_DECODE 函数解析 JSON 结果为 NULL 的解决方法', '', '', '', NULL, '<p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">在做网站 CMS 模块时，对于模块内容 content 字段，保存的是 json 格式的字符串，所以在后台进行模块内容的编辑操作 ( 取出保存的数据 ) 时，需要用到 json_decode() 函数。</p><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">但是在解析的时候，使用 json_decode() 函数解析的结果一直是 NULL，没有出现希望解析成的数组。下面是问题和分析：</p><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">1. 当输出 json 字符串时，代码和页面的显示内容分别是：</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">echo&nbsp;$content&nbsp;=&nbsp;$res[0][&#39;con&#39;][&#39;content&#39;];</pre><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">只需要考虑 $content , $res[0][&#39;con&#39;][&#39;content&#39;] 是从返回的数据中取出 content 的值，这里不需要考虑。这时页面显示：</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">{&quot;bpic&quot;:&quot;group1\\/M00\\/00\\/0D\\/rBAK31STtZeAe056AAKWuBmsAgc339.jpg&quot;,&quot;bname&quot;:&quot;112&quot;,&quot;breason&quot;:&quot;22&quot;,&quot;about1&quot;:&quot;3334&quot;,&quot;about2&quot;:&quot;444&quot;,&quot;about3&quot;:&quot;555&quot;,&quot;tpic1&quot;:&quot;group1\\/M00\\/00\\/0D\\/rBAK31STsyGARPwHAAMcD98U8xo736.jpg&quot;,&quot;tpic2&quot;:&quot;group1\\/M00\\/00\\/0D\\/rBAK31STtZeAEnEaAANwlbOXMYA393.jpg&quot;,&quot;tpic3&quot;:&quot;group1\\/M00\\/00\\/0D\\/rBAK31STtSqARRUMAAKWuBmsAgc150.jpg&quot;}</pre><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">稍微美化一下：</p><p><br/></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">{\n&quot;bpic&quot;:&quot;group1\\/M00\\/00\\/0D\\/rBAK31STtZeAe056AAKWuBmsAgc339.jpg&quot;,\n&quot;bname&quot;:&quot;112&quot;,\n&quot;breason&quot;:&quot;22&quot;,\n&quot;about1&quot;:&quot;3334&quot;,\n&quot;about2&quot;:&quot;444&quot;,\n&quot;about3&quot;:&quot;555&quot;,\n&quot;tpic1&quot;:&quot;group1\\/M00\\/00\\/0D\\/rBAK31STsyGARPwHAAMcD98U8xo736.jpg&quot;,\n&quot;tpic2&quot;:&quot;group1\\/M00\\/00\\/0D\\/rBAK31STtZeAEnEaAANwlbOXMYA393.jpg&quot;,\n&quot;tpic3&quot;:&quot;group1\\/M00\\/00\\/0D\\/rBAK31STtSqARRUMAAKWuBmsAgc150.jpg&quot;</pre><p><br/></p><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">2. 此时使用 json_decode() 解析 $content，并使用 var_dump 打印：</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">$content&nbsp;=&nbsp;json_decode($content,true);</pre><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">但是页面却显示 NULL。此时使用 json_last_error() 函数打印一下错误，页面显示4，也就是语法错误。</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">echo&nbsp;$errorinfo&nbsp;=&nbsp;json_last_error();&nbsp;&nbsp;&nbsp;//输出4&nbsp;语法错误</pre><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: #FF0000;"><strong style="margin: 0px; padding: 0px;">解决方法一：</strong></span></p><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">出现这个问题是因为在 json 字符串中反斜杠被转义，只需要用&nbsp;htmlspecialchars_decode() 函数处理一下 $content 即可：</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">$content&nbsp;=&nbsp;htmlspecialchars_decode($content);</pre><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">此时再使用 json_decode() 函数解析，就没有问题了，页面输出：</p><p><br/></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">=&gt;&nbsp;group1/M00/00/0D/rBAK31STtZeAe056AAKWuBmsAgc339.jpg&nbsp;\n[bname]&nbsp;=&gt;&nbsp;112=&gt;&nbsp;22=&gt;&nbsp;3334=&gt;&nbsp;444=&gt;&nbsp;555=&gt;&nbsp;group1/M00/00/0D/rBAK31STsyGARPwHAAMcD98U8xo736.jpg&nbsp;\n[tpic2]&nbsp;=&gt;&nbsp;group1/M00/00/0D/rBAK31STtZeAEnEaAANwlbOXMYA393.=&gt;&nbsp;group1/M00/00/0D/rBAK31STtSqARRUMAAKWuBmsAgc150.jpg&nbsp;\n)</pre><p><br/></p><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;</p><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: #FF0000;"><strong style="margin: 0px; padding: 0px;">解决方法二：</strong></span></p><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="margin: 0px; padding: 0px;"><br/></strong>在保存 json 数据时使用 urlencode() 函数：</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">$content&nbsp;=&nbsp;urlencode(json_encode($content));</pre><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">解析时使用 urldecode() 函数：</p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">$content&nbsp;=&nbsp;urldecode($content);</pre><p style="margin: 10px auto; padding: 0px; color: rgb(17, 17, 17); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(255, 255, 255);">即可避免反斜杠转义造成的无法解析。</p><p><br/></p>', '[]', 0),
(45, 1, 1, 1, 0, 0, 1530191272, 1530191272, NULL, 1530191240, 'JS中的TIPS', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">Splice</h1><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">定义和用法</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目。</p><h3 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 24px; white-space: normal; background-color: rgb(245, 245, 245);">说明</h3><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">splice() 方法可删除从 index 处开始的零个或多个元素，并且用参数列表中声明的一个或多个值来替换那些被删除的元素。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">如果从中删除了元素，则返回的是含有被删除的元素的数组。</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;\n\nvar&nbsp;arr&nbsp;=&nbsp;new&nbsp;Array(6)\narr[0]&nbsp;=&nbsp;&quot;George&quot;\narr[1]&nbsp;=&nbsp;&quot;John&quot;\narr[2]&nbsp;=&nbsp;&quot;Thomas&quot;\narr[3]&nbsp;=&nbsp;&quot;James&quot;\narr[4]&nbsp;=&nbsp;&quot;Adrew&quot;\narr[5]&nbsp;=&nbsp;&quot;Martin&quot;\n\ndocument.write(arr&nbsp;+&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;)arr.splice(2,0,&quot;William&quot;)document.write(arr&nbsp;+&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;)\n\n&lt;/script&gt;\n\nGeorge,John,Thomas,James,Adrew,Martin\nGeorge,John,William,Thomas,James,Adrew,Martin\n\n\n&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;\n\nvar&nbsp;arr&nbsp;=&nbsp;new&nbsp;Array(6)\narr[0]&nbsp;=&nbsp;&quot;George&quot;\narr[1]&nbsp;=&nbsp;&quot;John&quot;\narr[2]&nbsp;=&nbsp;&quot;Thomas&quot;\narr[3]&nbsp;=&nbsp;&quot;James&quot;\narr[4]&nbsp;=&nbsp;&quot;Adrew&quot;\narr[5]&nbsp;=&nbsp;&quot;Martin&quot;\n\ndocument.write(arr&nbsp;+&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;)arr.splice(2,1,&quot;William&quot;)document.write(arr)\n\n&lt;/script&gt;\n\nGeorge,John,Thomas,James,Adrew,Martin\nGeorge,John,William,James,Adrew,Martin\n\n\n&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;\n\nvar&nbsp;arr&nbsp;=&nbsp;new&nbsp;Array(6)\narr[0]&nbsp;=&nbsp;&quot;George&quot;\narr[1]&nbsp;=&nbsp;&quot;John&quot;\narr[2]&nbsp;=&nbsp;&quot;Thomas&quot;\narr[3]&nbsp;=&nbsp;&quot;James&quot;\narr[4]&nbsp;=&nbsp;&quot;Adrew&quot;\narr[5]&nbsp;=&nbsp;&quot;Martin&quot;\n\ndocument.write(arr&nbsp;+&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;)arr.splice(2,3,&quot;William&quot;)document.write(arr)\n\n&lt;/script&gt;\n\nGeorge,John,Thomas,James,Adrew,Martin\nGeorge,John,William,Martin</pre><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">Slice</h1><h2 style="box-sizing: border-box; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; margin: 0px 0px 30px; font-size: 30px; white-space: normal; background-color: rgb(245, 245, 245);">定义和用法</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">slice() 方法可从已有的数组中返回选定的元素。请注意，该方法并不会修改数组，而是返回一个子数组。如果想删除数组中的一段元素，应该使用方法 Array.splice()。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">注释：您可使用负值从数组的尾部选取元素。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">注释：如果 end 未被规定，那么 slice() 方法会选取从 start 到数组结尾的所有元素。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;\n\nvar&nbsp;arr&nbsp;=&nbsp;new&nbsp;Array(3)\narr[0]&nbsp;=&nbsp;&quot;George&quot;\narr[1]&nbsp;=&nbsp;&quot;John&quot;\narr[2]&nbsp;=&nbsp;&quot;Thomas&quot;\n\ndocument.write(arr&nbsp;+&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;)\ndocument.write(arr.slice(1)&nbsp;+&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;)\ndocument.write(arr)\n\n&lt;/script&gt;\n\nGeorge,John,Thomas\nJohn,Thomas\nGeorge,John,Thomas\n\n\n&lt;script&nbsp;type=&quot;text/javascript&quot;&gt;\n\nvar&nbsp;arr&nbsp;=&nbsp;new&nbsp;Array(6)\narr[0]&nbsp;=&nbsp;&quot;George&quot;\narr[1]&nbsp;=&nbsp;&quot;John&quot;\narr[2]&nbsp;=&nbsp;&quot;Thomas&quot;\narr[3]&nbsp;=&nbsp;&quot;James&quot;\narr[4]&nbsp;=&nbsp;&quot;Adrew&quot;\narr[5]&nbsp;=&nbsp;&quot;Martin&quot;\n\ndocument.write(arr&nbsp;+&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;)\ndocument.write(arr.slice(2,4)&nbsp;+&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;)\ndocument.write(arr)\n\n&lt;/script&gt;\n\nGeorge,John,Thomas,James,Adrew,Martin\nThomas,James\nGeorge,John,Thomas,James,Adrew,Martin</pre><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">时间戳与时间互转<br/></h1><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">//时间戳转时间\nfunction&nbsp;timestampToTime(timestamp)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;date&nbsp;=&nbsp;new&nbsp;Date(timestamp&nbsp;*&nbsp;1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Y&nbsp;=&nbsp;date.getFullYear()&nbsp;+&nbsp;&#39;-&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;M&nbsp;=&nbsp;(date.getMonth()+1&nbsp;&lt;&nbsp;10&nbsp;?&nbsp;&#39;0&#39;+(date.getMonth()+1)&nbsp;:&nbsp;date.getMonth()+1)&nbsp;+&nbsp;&#39;-&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;D&nbsp;=&nbsp;date.getDate()&nbsp;+&nbsp;&#39;&nbsp;&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h&nbsp;=&nbsp;date.getHours()&nbsp;+&nbsp;&#39;:&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m&nbsp;=&nbsp;date.getMinutes()&nbsp;+&nbsp;&#39;:&#39;;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;date.getSeconds();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Y+M+D+h+m+s;\n&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;timestampToTime(1403058804);\n&nbsp;&nbsp;&nbsp;&nbsp;console.log(timestampToTime(1403058804));//2014-06-18&nbsp;10:33:24\n&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;\n//时间转时间戳\nvar&nbsp;date&nbsp;=&nbsp;new&nbsp;Date(&#39;2014-04-23&nbsp;18:55:49:123&#39;);&nbsp;&nbsp;&nbsp;&nbsp;\n//&nbsp;有三种方式获取&nbsp;&nbsp;&nbsp;\n&nbsp;var&nbsp;time1&nbsp;=&nbsp;date.getTime();&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;var&nbsp;time2&nbsp;=&nbsp;date.valueOf();&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;var&nbsp;time3&nbsp;=&nbsp;Date.parse(date);&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;console.log(time1);//1398250549123&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;console.log(time2);//1398250549123&nbsp;&nbsp;&nbsp;&nbsp;\n&nbsp;&nbsp;console.log(time3);//1398250549000\n&nbsp;&nbsp;\n&nbsp;&nbsp;　第一、第二种：会精确到毫秒\n　　第三种：只能精确到秒，毫秒用000替代\n　　以上三个输出结果可观察其区别\n　　注意：获取到的时间戳除以1000就可获得Unix时间戳，就可传值给后台得到。</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p><br/></p>', '[]', 0);
INSERT INTO `lv_post` (`id`, `post_status`, `comment_status`, `user_id`, `is_top`, `is_recommend`, `create_time`, `update_time`, `delete_time`, `published_time`, `title`, `author`, `keywords`, `excerpt`, `source`, `content`, `more`, `template_id`) VALUES
(46, 1, 1, 1, 0, 0, 1530192093, 1530192093, NULL, 1530191298, 'MAMP与PHPSTORM配置XDEBUG', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">前言<br/></h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245); line-height: 2em; text-indent: 2em;">从刚开始学TP5小程序课程的时候用PHPSTROM开发服务端就一直想把调试功能给配置好了，但是一只弄不好，接口需要调试的时候也是忍着恶心用打印中间变量的方法给解决了，但是这次接了个电商小程序的活，开发api时，下单接口的业务实在是有一点复杂，晚上写的时候订单验证器出了问题，打印中间变量需要改不少代码，下了下狠心，先不写接口也得把调试给配置好了。</p><h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">开整</h1><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box; color: #454545; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: #FFFFFF;">启动mamp，访问phpinfo(),确定php.ini的位置。一般情况下在：</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><strong style="box-sizing: border-box;">/Applications/MAMP/bin/php/php(版本号)/conf&nbsp;&nbsp;</strong></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box; color: #454545; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: #FFFFFF;"></span><span style="box-sizing: border-box; color: #454545; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: #FFFFFF;">编辑php.ini，一般在最下面的位置有写好 [xdebug]的扩展路径，只是注释掉了 。检查一下路径如果没问题，就去掉注释并添加一些内容。最后结果如下：</span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">[xdebug]</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">zend_extension=&quot;/Applications/MAMP/bin/php/php7.0.15/lib/php/extensions/no-debug-non-zts-20151012/xdebug.so&quot;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">xdebug.remote_enable=on&nbsp; &nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">xdebug.idekey=&quot;PHPSTORM&quot;&nbsp; &nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">xdebug.remote_handler=&quot;dbgp&quot;&nbsp; &nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">xdebug.remote_mode=&quot;req&quot;&nbsp; &nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">xdebug.max_nesting_level=600&nbsp;&nbsp;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">xdebug.remote_port = 9000</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><strong style="box-sizing: border-box;">xdebug.profiler_enable = 1&nbsp;&nbsp;</strong></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><strong style="box-sizing: border-box;">xdebug.profiler_output_dir = &quot;/tmp&quot;&nbsp; (当时缺了这两行一直无法调试)</strong></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box; color: #454545; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: #FFFFFF;"><span style="box-sizing: border-box;">然后重启MAMP</span></span><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box; color: #454545; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; background-color: #FFFFFF;"><span style="box-sizing: border-box;">接下来打开phpstorm配置菜单：Languages &amp; Frameworks -&gt; PHP,选择PHP版本号，选择PHP执行文件.没有就点选择，进入相应php文件夹选择添加即可</span></span>&nbsp;&nbsp;</p><p><img src="/upload/editor/image/20180628/1530191327744363.png" alt="19233055515.png"/></p><p><span style="color: #454545; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 14px; background-color: #FFFFFF;">在选择PHP执行文件的时候，你会看到 &quot;Debugger:Xdebug 2.5.0&quot;，这证明你没有选错。</span></p><p><img src="/upload/editor/image/20180628/1530191344727129.png" alt="1923311278.png"/></p><p><span style="color: #454545; font-family: &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, SimHei, Arial, SimSun; font-size: 14px; background-color: #FFFFFF;">接下来修改xdebug端口监听设置</span></p><p><img src="/upload/editor/image/20180628/1530191537423509.png" alt="19233344969.png"/></p><p><span style="color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; background-color: #F5F5F5;">设置代理</span></p><p><img src="/upload/editor/image/20180628/1530191742509757.png" alt="19233540953.png"/></p><p><span style="color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; background-color: #F5F5F5;">设置服务器，端口需要与mamp一致</span></p><p><img src="/upload/editor/image/20180628/1530192031455562.png" alt="192335480.png"/></p><p><span style="color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; background-color: #F5F5F5;">然后点击，并编辑需要调试的页面url</span></p><p><img src="/upload/editor/image/20180628/1530192059383991.png" alt="19233843750.png"/></p><p><img src="/upload/editor/image/20180628/1530192076329056.png" alt="19233834875.png"/></p><p><span style="color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; background-color: #F5F5F5;">打上断点，点击调试的按钮（虫子）即可开始调试</span></p>', '[]', 0),
(47, 1, 1, 1, 0, 0, 1530192435, 1530192435, NULL, 1530192335, '微信小程序TIPS', '', '', '', NULL, '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">1.scroll-view横向滑动布局，主要是white-space:no-wrap与内项的inline-block</p><pre class="brush:html;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">&lt;scroll-view&nbsp;scroll-x&nbsp;class=&quot;scroll-header&quot;&gt;\n&lt;view&nbsp;id=&quot;green&quot;&nbsp;class=&quot;scroll-view-item&nbsp;bc_green&quot;&gt;&lt;/view&gt;\n&lt;view&nbsp;id=&quot;red&quot;&nbsp;class=&quot;scroll-view-item&nbsp;bc_red&quot;&gt;&lt;/view&gt;\n&lt;view&nbsp;id=&quot;yellow&quot;&nbsp;class=&quot;scroll-view-item&nbsp;bc_yellow&quot;&gt;&lt;/view&gt;\n&lt;view&nbsp;id=&quot;blue&quot;&nbsp;class=&quot;scroll-view-item&nbsp;bc_blue&quot;&gt;&lt;/view&gt;\n&lt;view&nbsp;id=&quot;blue&quot;&nbsp;class=&quot;scroll-view-item&nbsp;bc_blue&quot;&gt;&lt;/view&gt;\n&lt;view&nbsp;id=&quot;blue&quot;&nbsp;class=&quot;scroll-view-item&nbsp;bc_blue&quot;&gt;&lt;/view&gt;\n&lt;view&nbsp;id=&quot;blue&quot;&nbsp;class=&quot;scroll-view-item&nbsp;bc_blue&quot;&gt;&lt;/view&gt;\n&lt;view&nbsp;id=&quot;blue&quot;&nbsp;class=&quot;scroll-view-item&nbsp;bc_blue&quot;&gt;&lt;/view&gt;\n&lt;/scroll-view&gt;\n主要是css\n.scroll-header{\ndisplay:&nbsp;flex;\nwhite-space:&nbsp;nowrap;&nbsp;&nbsp;这个很重要，\n}\n.scroll-header&nbsp;view{\nheight:128rpx;\nwidth:128rpx;\nborder:1px&nbsp;solid&nbsp;red;\ndisplay:&nbsp;inline-block;&nbsp;这个也很重要\n}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">1.scroll-view 中的需要滑动的元素不可以用 float 浮动；</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">2.scroll-view 中的包裹需要滑动的元素的大盒子用 display:flex; 是没有作用的；即元素外的wraper不能用flex</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">3.scroll-view 中的需要滑动的元素要用 dislay:inline-block; 进行元素的横向编排；</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">4.包裹 scroll-view 的大盒子有明确的宽和加上样式--&gt; &nbsp;overflow:hidden;white-space:nowrap;</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">2.在view中显示文字不会自动换行（推荐用text标签显示文字），要使用强制换行，至于是使用white-space:pre-line（不会保留空白和tabs），还是white-space:pre-wrap（会保留空白和tabs），看个人的编程习惯</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">3.微信支付获取不到微信回调的返回参数$GLOBALS[&#39;HTTP_RAW_POST_DATA&#39;]</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><span style="box-sizing: border-box; background-color: #FFFFFF; color: #323232; font-family: &quot;Century Gothic&quot;, &quot;Microsoft yahei&quot;;">用 file_get_contents(&quot;php://input&quot;); 代替$GLOBALS[&#39;HTTP_RAW_POST_DATA&#39;]，因为<span style="box-sizing: border-box;">php 7.0 以后已经废除了 HTTP_RAW_POST_DATA</span></span></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);"><br/></p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">4.小程序滚动到页面底部</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">//&nbsp;获取容器高度，使页面滚动到容器底部\n&nbsp;&nbsp;pageScrollToBottom:&nbsp;function()&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;wx.createSelectorQuery().select(&#39;#j_page&#39;).boundingClientRect(function(rect){\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;使页面滚动到底部\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wx.pageScrollTo({\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scrollTop:&nbsp;rect.bottom\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})\n&nbsp;&nbsp;&nbsp;&nbsp;}).exec()\n&nbsp;&nbsp;},\n&nbsp;&nbsp;\n//j_page为页面容器的id\n//使用rect.bottom,&nbsp;rect.height均能达到滚动到底部的效果\n//在数据更新后（setData回调函数）使用</pre><p><br/></p>', '[]', 0),
(48, 1, 1, 1, 0, 0, 1530192525, 1530192525, NULL, 1530192491, 'LAYER的TIPS', '', '', '', NULL, '<h1 style="box-sizing: border-box; font-size: 36px; margin: 0px 0px 30px; font-family: Roboto, Arial, sans-serif; font-weight: 400; line-height: 1.1; white-space: normal; background-color: rgb(245, 245, 245);">layer.layui &nbsp;开启iframe 之后,获取iframe 内容做自定义处理.</h1><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">layer.open({\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;2,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title:&nbsp;&#39;任務執行狀況。&#39;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shadeClose:&nbsp;true,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shade:&nbsp;false,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maxmin:&nbsp;true,&nbsp;//开启最大化最小化按钮\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area:&nbsp;[&#39;1150px&#39;,&nbsp;&#39;650px&#39;],\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content:&nbsp;&#39;/CrystalQuartzPanel.axd&#39;,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success:&nbsp;function&nbsp;(layero,&nbsp;index)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;body&nbsp;=&nbsp;layer.getChildFrame(&#39;body&#39;,&nbsp;index);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;iframeWin&nbsp;=&nbsp;window[layero.find(&#39;iframe&#39;)[0][&#39;name&#39;]];&nbsp;//得到iframe页的窗口对象，执行iframe页的方法：iframeWin.method();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(body.html())&nbsp;//得到iframe页的body内容\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;body.find(&quot;.cq-leave-link&quot;).hide();\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});</pre><p><br/></p>', '[]', 0),
(49, 1, 1, 1, 0, 0, 1530192625, 1530192625, NULL, 1530192607, 'NodeJS学习笔记', '', '', '', NULL, '<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">1.使用mongoose的update更新子文档</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px;">User.update({userId:userId},{\n$pull:{\n&nbsp;&nbsp;&nbsp;&nbsp;addressList:{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addressId:addressId\n&nbsp;&nbsp;&nbsp;&nbsp;}\n}\n},function(err,doc){\n//callback\n});\n\n//使用时因为手滑遇到了个问题，调用一次把所有地址都删了，查了半天，发现是$pull里的条件写成了\n&#39;addressList:&#39;{\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;addressId&#39;:address\n}\n冒号卸载引号里面了，很操蛋，直接一调用子文档全没了，因为调用的时候是k-v对象的形式，索性把引号全去了，省的再出这种问题</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">2.读写cookie</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1.5em; color: rgba(0, 0, 0, 0.5); font-family: Roboto, Arial, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(245, 245, 245);">在读cookie的时候用request.<span style="box-sizing: border-box; color: #FF0000;">cookies</span>.userId，注意cookies有s，写cookies的时候使用response.cookie(&#39;键名&#39;,&#39;键值&#39;,{path:&#39;/&#39;,maxAge:1000*60*60});</p><p><br/></p>', '[]', 0),
(50, 1, 1, 1, 0, 0, 1530243882, 1530243882, NULL, 2147483647, 'bilibili的一个按钮', '', '', '', NULL, '<h1><span style="font-family: 微软雅黑, &quot;Microsoft YaHei&quot;;">效果&nbsp;&nbsp;</span></h1><p><span style="font-family: 微软雅黑, &quot;Microsoft YaHei&quot;;">&nbsp;<span style="display: inline-block; width: 100px; height: 36px; background-image: linear-gradient(-48deg, #FE8574, #FF6A9C); box-shadow: #FDB8CC 0px 3px 4px 0px; color: white; text-align: center; line-height: 36px;">button</span></span></p><h1><span style="font-family: 微软雅黑, &quot;Microsoft YaHei&quot;;">代码</span></h1><p></p><pre class="brush:css;toolbar:false"><span style="font-family: 微软雅黑, &quot;Microsoft YaHei&quot;;">background-image: linear-gradient(-48deg,#fe8574,#ff6a9c);box-shadow: 0 3px 4px 0 #fdb8cc;<br/></span></pre><p></p><p><br/></p>', '[]', 0);

-- --------------------------------------------------------

--
-- 表的结构 `lv_role`
--

CREATE TABLE IF NOT EXISTS `lv_role` (
  `id` int(11) NOT NULL,
  `name` text COMMENT '角色名称',
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='角色表';

--
-- 转存表中的数据 `lv_role`
--

INSERT INTO `lv_role` (`id`, `name`, `create_time`, `update_time`) VALUES
(1, '管理员', NULL, NULL),
(2, '内容管理员', 1527085189, 1527147938),
(3, '评论管理员', 1527085336, 1527085336),
(4, '用户管理员', 1527085345, 1527147943);

-- --------------------------------------------------------

--
-- 表的结构 `lv_role_auth`
--

CREATE TABLE IF NOT EXISTS `lv_role_auth` (
  `id` int(11) NOT NULL,
  `role_id` int(11) DEFAULT NULL,
  `auth_id` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=71 DEFAULT CHARSET=utf8 COMMENT='角色权限关系表';

--
-- 转存表中的数据 `lv_role_auth`
--

INSERT INTO `lv_role_auth` (`id`, `role_id`, `auth_id`) VALUES
(24, 2, 8),
(25, 2, 9),
(26, 2, 10),
(27, 2, 11),
(28, 3, 11),
(29, 4, 12),
(55, 1, 1),
(56, 1, 2),
(57, 1, 3),
(58, 1, 7),
(59, 1, 8),
(60, 1, 9),
(61, 1, 10),
(62, 1, 11),
(63, 1, 13),
(64, 1, 12),
(65, 1, 18),
(66, 1, 19),
(67, 1, 15),
(68, 1, 14),
(69, 1, 16),
(70, 1, 17);

-- --------------------------------------------------------

--
-- 表的结构 `lv_single`
--

CREATE TABLE IF NOT EXISTS `lv_single` (
  `id` int(11) NOT NULL,
  `title` varchar(255) DEFAULT NULL,
  `excerpt` varchar(255) DEFAULT NULL,
  `keywords` varchar(255) DEFAULT NULL,
  `content` text,
  `more` text,
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `delete_time` int(11) DEFAULT NULL,
  `template_id` int(11) DEFAULT '0',
  `status` int(11) DEFAULT '1' COMMENT '1发布0不发布'
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='单页表';

--
-- 转存表中的数据 `lv_single`
--

INSERT INTO `lv_single` (`id`, `title`, `excerpt`, `keywords`, `content`, `more`, `create_time`, `update_time`, `delete_time`, `template_id`, `status`) VALUES
(1, 'single', '', '', '<p>fuck???<br/></p>', '[]', 1527955480, 1530089714, NULL, 2, 1),
(2, '单页', 'single', 'single', '<p>test</p>', '[]', 1528280728, 1530089671, NULL, 2, 1),
(3, '单页2', '', '', '', '[]', 1528281009, 1528281009, NULL, 2, 1),
(4, 'test editor', '', '', '<p>试一下编辑器</p>', '[]', 1530093616, 1530093616, NULL, 0, 1);

-- --------------------------------------------------------

--
-- 表的结构 `lv_slide`
--

CREATE TABLE IF NOT EXISTS `lv_slide` (
  `id` int(11) unsigned NOT NULL,
  `name` text,
  `excerpt` text,
  `more` text
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `lv_slide`
--

INSERT INTO `lv_slide` (`id`, `name`, `excerpt`, `more`) VALUES
(1, '主幻灯片', 'one', '[]'),
(2, '副幻灯片', 'two', '"{}"');

-- --------------------------------------------------------

--
-- 表的结构 `lv_slide_item`
--

CREATE TABLE IF NOT EXISTS `lv_slide_item` (
  `id` int(11) NOT NULL,
  `img_url` text,
  `link` text,
  `type` tinyint(3) DEFAULT NULL COMMENT '1栏目型2内容型3单页型4外链型',
  `item_id` int(20) DEFAULT '0' COMMENT '幻灯片背后内容的id',
  `more` text,
  `list_order` int(11) DEFAULT '0' COMMENT '展示次序',
  `slide_id` int(11) DEFAULT NULL,
  `name` text
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='幻灯片表';

-- --------------------------------------------------------

--
-- 表的结构 `lv_template`
--

CREATE TABLE IF NOT EXISTS `lv_template` (
  `id` int(11) unsigned NOT NULL,
  `url` text,
  `name` text,
  `more` int(11) DEFAULT NULL,
  `type` int(11) DEFAULT '1' COMMENT '1栏目模版2单页模版3内容模版',
  `is_default` tinyint(11) DEFAULT '0' COMMENT '0非默认1默认',
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `lv_template`
--

INSERT INTO `lv_template` (`id`, `url`, `name`, `more`, `type`, `is_default`, `create_time`, `update_time`) VALUES
(1, '/base/category', '栏目测试模版', 0, 1, 1, 1528037235, 1528099247),
(2, '/single', '单页测试模版', NULL, 2, 0, 1528275975, 1528275975);

-- --------------------------------------------------------

--
-- 表的结构 `lv_user`
--

CREATE TABLE IF NOT EXISTS `lv_user` (
  `id` int(11) NOT NULL,
  `account` varchar(50) NOT NULL DEFAULT '',
  `password` text NOT NULL,
  `type` int(11) DEFAULT '0' COMMENT '会员类型',
  `status` varchar(11) DEFAULT '0' COMMENT '会员状态当前账号状态0正常，1锁死，2拉黑',
  `error_count` varchar(11) DEFAULT '0',
  `more` text,
  `create_time` int(11) DEFAULT NULL,
  `update_time` int(11) DEFAULT NULL,
  `user_group_id` int(11) DEFAULT '0'
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='普通用户表';

--
-- 转存表中的数据 `lv_user`
--

INSERT INTO `lv_user` (`id`, `account`, `password`, `type`, `status`, `error_count`, `more`, `create_time`, `update_time`, `user_group_id`) VALUES
(1, '849688611', 'debfc6c7fd10b9b2e1d1c2924c6beb10', 0, '0', '0', '""', 1525929699, 1525930452, 0),
(2, 'w849688611', 'debfc6c7fd10b9b2e1d1c2924c6beb10', 0, '0', '0', '""', 1525929727, 1525930008, 0),
(3, 'wly849688611', 'de3607946dacfc4298ff761726ab0295', 0, '0', '0', '""', 1525930493, 1529931152, 1),
(4, 'user666', 'db18311307ac51be0ad343101e9947e2', 0, '0', '0', 'null', 1529811106, 1529811106, 1);

-- --------------------------------------------------------

--
-- 表的结构 `lv_user_group`
--

CREATE TABLE IF NOT EXISTS `lv_user_group` (
  `id` int(11) NOT NULL,
  `name` text NOT NULL,
  `create_time` int(11) NOT NULL,
  `update_time` int(11) NOT NULL
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;

--
-- 转存表中的数据 `lv_user_group`
--

INSERT INTO `lv_user_group` (`id`, `name`, `create_time`, `update_time`) VALUES
(1, '用户', 1529327737, 1529327997);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `lv_admin`
--
ALTER TABLE `lv_admin`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_auth`
--
ALTER TABLE `lv_auth`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_category`
--
ALTER TABLE `lv_category`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_category_post`
--
ALTER TABLE `lv_category_post`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_comment`
--
ALTER TABLE `lv_comment`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_config`
--
ALTER TABLE `lv_config`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_file`
--
ALTER TABLE `lv_file`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_link`
--
ALTER TABLE `lv_link`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_nav`
--
ALTER TABLE `lv_nav`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_nav_item`
--
ALTER TABLE `lv_nav_item`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_post`
--
ALTER TABLE `lv_post`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_role`
--
ALTER TABLE `lv_role`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_role_auth`
--
ALTER TABLE `lv_role_auth`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_single`
--
ALTER TABLE `lv_single`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_slide`
--
ALTER TABLE `lv_slide`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_slide_item`
--
ALTER TABLE `lv_slide_item`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_template`
--
ALTER TABLE `lv_template`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_user`
--
ALTER TABLE `lv_user`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `lv_user_group`
--
ALTER TABLE `lv_user_group`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `lv_admin`
--
ALTER TABLE `lv_admin`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=7;
--
-- AUTO_INCREMENT for table `lv_auth`
--
ALTER TABLE `lv_auth`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=20;
--
-- AUTO_INCREMENT for table `lv_category`
--
ALTER TABLE `lv_category`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=26;
--
-- AUTO_INCREMENT for table `lv_category_post`
--
ALTER TABLE `lv_category_post`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=60;
--
-- AUTO_INCREMENT for table `lv_comment`
--
ALTER TABLE `lv_comment`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=6;
--
-- AUTO_INCREMENT for table `lv_config`
--
ALTER TABLE `lv_config`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `lv_file`
--
ALTER TABLE `lv_file`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=15;
--
-- AUTO_INCREMENT for table `lv_link`
--
ALTER TABLE `lv_link`
  MODIFY `id` int(11) unsigned NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `lv_nav`
--
ALTER TABLE `lv_nav`
  MODIFY `id` int(11) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=5;
--
-- AUTO_INCREMENT for table `lv_nav_item`
--
ALTER TABLE `lv_nav_item`
  MODIFY `id` int(11) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=5;
--
-- AUTO_INCREMENT for table `lv_post`
--
ALTER TABLE `lv_post`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=52;
--
-- AUTO_INCREMENT for table `lv_role`
--
ALTER TABLE `lv_role`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=5;
--
-- AUTO_INCREMENT for table `lv_role_auth`
--
ALTER TABLE `lv_role_auth`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=71;
--
-- AUTO_INCREMENT for table `lv_single`
--
ALTER TABLE `lv_single`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=5;
--
-- AUTO_INCREMENT for table `lv_slide`
--
ALTER TABLE `lv_slide`
  MODIFY `id` int(11) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=4;
--
-- AUTO_INCREMENT for table `lv_slide_item`
--
ALTER TABLE `lv_slide_item`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=4;
--
-- AUTO_INCREMENT for table `lv_template`
--
ALTER TABLE `lv_template`
  MODIFY `id` int(11) unsigned NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=3;
--
-- AUTO_INCREMENT for table `lv_user`
--
ALTER TABLE `lv_user`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=5;
--
-- AUTO_INCREMENT for table `lv_user_group`
--
ALTER TABLE `lv_user_group`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=2;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
